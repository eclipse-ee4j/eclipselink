language: java
sudo: required

branches:
  only:
    - travis_experiment

addons:
  apt:
    sources:
      - mysql-5.7-trusty
    packages:
      - junit4
      - libhamcrest-java
      - libmysql-java
      - mysql-server
      - mysql-client

env:
  global:
    - ANT_HOME=/usr/share/ant
    - M2_HOME=/usr/local/maven-3.5.2
  matrix:
    - TEST_TARGET=test-core
    - TEST_TARGET=test-jpa22
    - TEST_TARGET=test-moxy
    - TEST_TARGET=test-sdo
    - TEST_TARGET="test-jpa-jse test-ext test-jpql test-wdf test-jpars test-dbws test-dbws-builder"
    - TEST_TARGET=test-osgi

jdk:
  - oraclejdk8
  - oraclejdk9

cache:
  directories:
    - $HOME/.m2

before_install:
  - sudo mysql_upgrade
  - sudo mysql -u root -e "use mysql; update user set authentication_string=PASSWORD('root') where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;CREATE DATABASE IF NOT EXISTS ecltest;"
  - sudo service mysql restart

install:
  - mkdir $HOME/extension.lib.external
  - wget http://repo1.maven.org/maven2/org/jmockit/jmockit/1.35/jmockit-1.35.jar -O $HOME/extension.lib.external/jmockit-1.35.jar

before_script:
  - env | sort
  - echo "extensions.depend.dir=$HOME/extension.lib.external" >> $HOME/build.properties
  - echo 'junit.lib=/usr/share/java/junit4.jar:/usr/share/java/hamcrest-all-1.3.jar' >> $HOME/build.properties
  - echo 'jdbc.driver.jar=/usr/share/java/mysql.jar' >> $HOME/build.properties
  - echo 'db.driver=com.mysql.jdbc.Driver' >> $HOME/build.properties
  - echo 'db.url=jdbc:mysql://localhost/ecltest?useSSL=false' >> $HOME/build.properties
  - echo 'db.user=root' >> $HOME/build.properties
  - echo 'db.pwd=root' >> $HOME/build.properties
  - echo 'db.platform=org.eclipse.persistence.platform.database.MySQLPlatform' >> $HOME/build.properties
  - if [ `java -version 2>&1|awk -F\" '/version/ {print $2}' | cut -d'.' -f1` -gt "8" ]; then echo 'additional.jvmargs=--add-modules java.xml.ws,java.xml.ws.annotation,java.corba' >> $HOME/build.properties; fi

script:
  - cat $HOME/build.properties
  - ant -f antbuild.xml build
  - echo 'RUNNING TESTS, BE PATIENT...'
  - ant -f antbuild.xml $TEST_TARGET | grep -E "\[junit\] Running|\[junit\] Tests run:"

