/*
 * Copyright (c) 2016, 2021 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

// Contributors:
//     Ondrej Cerny
package org.eclipse.persistence.testing.jaxb.annotations.xmlschema.model.base;

import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;

import org.eclipse.persistence.testing.jaxb.annotations.xmlschema.model.extended.ExtendedObject;

@XmlSeeAlso({ ExtendedObject.class })
@XmlRootElement
public class BaseObject {
    public String stringField;

    @Override
    public int hashCode() {
        // generated by Eclipse IDE
        final int prime = 31;
        int result = 1;
        result = prime * result + ((stringField == null) ? 0 : stringField.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        // generated by Eclipse IDE
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof BaseObject)) {
            return false;
        }
        BaseObject other = (BaseObject) obj;
        if (stringField == null) {
            if (other.stringField != null) {
                return false;
            }
        } else if (!stringField.equals(other.stringField)) {
            return false;
        }
        return true;
    }
}
