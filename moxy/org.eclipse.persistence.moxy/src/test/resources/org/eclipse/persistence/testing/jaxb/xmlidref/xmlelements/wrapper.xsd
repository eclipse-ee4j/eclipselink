<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Copyright (c) 2018, 2021 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   <xsd:complexType name="attributeImpl2">
      <xsd:sequence/>
      <xsd:attribute name="id" type="xsd:ID"/>
   </xsd:complexType>
   <xsd:complexType name="attributeImpl">
      <xsd:sequence/>
      <xsd:attribute name="id" type="xsd:ID"/>
   </xsd:complexType>
   <xsd:complexType name="foo">
      <xsd:sequence>
         <xsd:choice maxOccurs="unbounded">
            <xsd:element minOccurs="0" name="Attribute1" type="attributeImpl"/>
            <xsd:element minOccurs="0" name="Attribute2" type="attributeImpl2"/>
         </xsd:choice>
         <xsd:element minOccurs="0" name="AttributeRefs">
            <xsd:complexType>
               <xsd:sequence>
                  <xsd:choice maxOccurs="unbounded">
                     <xsd:element minOccurs="0" name="AttributeRef1" type="xsd:IDREF"/>
                     <xsd:element minOccurs="0" name="AttributeRef2" type="xsd:IDREF"/>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:complexType>
         </xsd:element>
         <xsd:element minOccurs="0" name="AttributeImplsWrapper">
            <xsd:complexType>
               <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" minOccurs="0" name="attributeImplRefs" nillable="true" type="xsd:IDREF"/>
               </xsd:sequence>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="foo" type="foo"/>
</xsd:schema>
