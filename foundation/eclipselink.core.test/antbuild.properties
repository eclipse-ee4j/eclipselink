#
# Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0,
# or the Eclipse Distribution License v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

custom=true
# Edit this if/when the release number changes
release.version=2.7.7

# Edit these properties to point to your local jars.
eclipselink.jar=eclipselink.jar

# Global options
classes.dir=classes
src.dir=src
resource.dir=resource
run.dir=run
fail.on.error=false
report.dir=reports

# Edit this property to increase the maxMemory heap memory used by the tests if you get an OutOfMemoryException - use JConsole.exe to triage the memory spike at the end of the test
# 282012: On a 64-bit JVM - The XML processing at the end of the testing requires at least 1536
# Note: on a legacy XP OS with 4GB ram - the max is 1536 - use of 2048 will cause [junit] [WARN ] Unable to acquire some virtual address space - reduced from 2048 to 1908MB.
# The current default is 1024m = 1GB (the LC "m" is required")
max.heap.memory=1024m

# Compiler/Java options
javac.debug=true
javac.debuglevel=lines,vars,source
javac.deprecation=false
javac.modules=java.transaction

# Test options
test.junit.jvm.modules=${javac.modules}
test.properties=test.properties

# Paths
eclipselink.core=../org.eclipse.persistence.core

# Modules
persistence22.jar=jakarta.persistence_2.2.3.jar
transaction.jar=jakarta.transaction-api.jar

#Classpath
coretest.framework.jar=eclipselink-coretest-framework.jar
core.test.jar=eclipselink-core-tests.jar
asm.jar=org.eclipse.persistence.asm_7.3.1.v202003311108.jar
antlr.jar=org.eclipse.persistence.antlr_3.5.2.v201711011707.jar

#JaCoCo
jacocoagent.jar=jacocoagent.jar

#TBD:
#ejb.jar=jakarta.ejb-api.jar
#jms.jar=jakarta.jms-api.jar
#mail.jar=jakarta.mail.jar

#connector.jar=jakarta.resource-api.jar

#eclipselink.core.depend=${eclipselink.core.depend.without.connector},${connector.jar}
#eclipselink.core.test=.

# These are used for running using the prompt runner.
core.test.properties=automated.test.properties
core.test.regression.log=core.test.regression.log
