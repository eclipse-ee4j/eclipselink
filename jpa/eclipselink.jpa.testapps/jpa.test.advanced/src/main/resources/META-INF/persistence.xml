<!--

    Copyright (c) 2019, 2024 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0,
    or the Eclipse Distribution License v. 1.0 which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

-->

<persistence xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence persistence_1_0.xsd" version="1.0">
    <persistence-unit name="default" transaction-type="RESOURCE_LOCAL">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <!-- this is here for testing purposes - ensures a persistence unit can load even with a file that does not exist.  Please do not add an xml file called: META-INF/non-existant-orm-file.xml -->
        <mapping-file>META-INF/non-existant-orm-file.xml</mapping-file>
<!--        <jar-file>eclipselink-xml-only-model.jar</jar-file>-->
<!--        <jar-file>eclipselink-xml-merge-model.jar</jar-file>-->
        <!-- this is here for testing purposes GF #588, do not remove. -->
<!--        <class>org.eclipse.persistence.testing.models.jpa.xml.inherited.Beer</class>-->
        <exclude-unlisted-classes>false</exclude-unlisted-classes>

        <properties>
            <!-- JDBC properties will be given by test.properties file in runtime -->
            <property name="eclipselink.session-name" value="default-session"/>
            <property name="eclipselink.jdbc.read-connections.shared" value="true"/>
            <property name="eclipselink.jdbc.write-connections.min" value="3"/>
            <property name="eclipselink.jdbc.write-connections.max" value="8"/>
            <property name="eclipselink.jdbc.read-connections.min" value="3"/>
            <property name="eclipselink.jdbc.read-connections.max" value="3"/>
            <property name="eclipselink.cache.size.default" value="500"/>
            <property name="eclipselink.cache.size.Employee" value="550"/>
            <property name="eclipselink.cache.size.org.eclipse.persistence.testing.models.jpa.advanced.Address" value="555"/>
            <property name="eclipselink.cache.type.default" value="Full"/>
            <property name="eclipselink.cache.type.Employee" value="Weak"/>
            <property name="eclipselink.cache.type.org.eclipse.persistence.testing.models.jpa.advanced.Address" value="HardWeak"/>
<!--            <property name="eclipselink.cache.shared.org.eclipse.persistence.testing.models.jpa.relationships.IsolatedItem" value="false"/>-->
            <property name="eclipselink.session.customizer" value="org.eclipse.persistence.testing.models.jpa.advanced.Customizer"/>
            <property name="eclipselink.descriptor.customizer.Employee" value="org.eclipse.persistence.testing.models.jpa.advanced.Customizer"/>
            <property name="eclipselink.descriptor.customizer.org.eclipse.persistence.testing.models.jpa.advanced.Address" value="org.eclipse.persistence.testing.models.jpa.advanced.Customizer"/>
            <property name="eclipselink.descriptor.customizer.Project" value="org.eclipse.persistence.testing.models.jpa.advanced.Customizer"/>
            <property name="eclipselink.persistence-context.reference-mode" value="WEAK"/>
            <property name="eclipselink.logging.timestamp" value="false"/>
            <property name="eclipselink.orm.throw.exceptions" value="false"/>
            <property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
            <property name="eclipselink.create-ddl-jdbc-file-name" value="advanced-model-create.jdbc"/>
            <property name="eclipselink.drop-ddl-jdbc-file-name" value="advanced-model-drop.jdbc"/>
            <property name="eclipselink.ddl-generation.output-mode" value="sql-script"/>
            <property name="eclipselink.validate-existence" value="true"/>
            <!--Uncomment these to test weaving options >
            <property name="eclipselink.weaving.eager" value="true"/>
            <property name="eclipselink.weaving.internal" value="false"/-->
            <property name="eclipselink.orm.validate.schema" value="true"/>
            <property name="jakarta.persistence.lock.timeout" value="5000"/>
            <property name="eclipselink.id-validation" value="NEGATIVE"/>
            <property name="jakarta.persistence.query.timeout" value="20000"/>
            <property name="NAME" value="Montreal%"/>
            <!-- Since we don't exclude unlisted classes here, we will       -->
            <!-- eventually hit the multitenant entities which turn native   -->
            <!-- sql queries off by default, so we need to be explicit here  -->
            <!--  and turn them on                                           -->
            <property name="eclipselink.jdbc.allow-native-sql-queries" value="true"/>
        </properties>
    </persistence-unit>

    <!-- see https://github.com/eclipse-ee4j/eclipselink/issues/1678 -->
    <persistence-unit name="default1">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
        <properties>
            <property name="eclipselink.logging.level" value="OFF"/>
            <!-- Since we don't exclude unlisted classes here, we will       -->
            <!-- eventually hit the multitenant entities which turn native   -->
            <!-- sql queries off by default, so we need to be explicit here  -->
            <!--  and turn them on                                           -->
            <property name="eclipselink.jdbc.allow-native-sql-queries" value="true"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="customizeAddTarget">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <exclude-unlisted-classes>false</exclude-unlisted-classes>
        <properties>
            <property name="eclipselink.logging.level" value="OFF"/>
            <property name="eclipselink.descriptor.customizer.Employee" value="org.eclipse.persistence.testing.models.jpa.advanced.AddTargetCustomizer"/>
            <!-- Since we don't exclude unlisted classes here, we will       -->
            <!-- eventually hit the multitenant entities which turn native   -->
            <!-- sql queries off by default, so we need to be explicit here  -->
            <!--  and turn them on                                           -->
            <property name="eclipselink.jdbc.allow-native-sql-queries" value="true"/>
        </properties>
    </persistence-unit>

</persistence>
