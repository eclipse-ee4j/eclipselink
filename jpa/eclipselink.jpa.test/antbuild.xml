<!--

    Copyright (c) 1998, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0,
    or the Eclipse Distribution License v. 1.0 which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

-->

<!--
  Contributors:
      tware - initial API and implementation
-->
<!-- This ant project includes the following tasks:
        - build (default) : compiles all JPA tests, packages test jars
        - compile : compiles all JPA tests
        - package : jars JPA persistent units and tests jars
        - test : runs JPA FullRegressionTestSuite - includes the full set of JUnit tests, but no legacy tests
        - test-lrg : runs JPA LRG (AllCMP3TestRunModel, if database is Oracle, oracle specific tests as well)
        - oracle-test : runs JPA Oracle-specific tests (OracleJPATestSuite and OracleJPACustomfeaturesTestSuite)
        - oracle-proxy-test : runs JPA Oracle Proxy Authentication specific tests (ProxyAuthenticationServerTestSuite)
        - test-no-weave : runs JPA LRG using no weaving (no agent)
        - test-static-weave : runs JPA LRG using static weaving

        - server-start : starts the JEE server
        - server-stop : stops the JEE server
        - server-restart : stops and restarts the JEE server (match the restart command in Eclipse)
        - server-test : runs the JPA LRG tests in the server
        - server-test-lrg : runs the JPA LRG tests in the server
        - server-test-oracle-proxy : runs the Oracle Proxy Authentication JPA tests in the server
        - server-test-sessionbean : runs the SessionBean tests in the server
        - server-test-fieldaccess-advanced : runs the Fieldaccess tests in the server
        - server-test-datatypes : runs the Datatypes tests in the server
        - server-test-datetime : runs the Datetime tests in the server

        It requires some configuration of the build.properties and test.properties to run.
    -->
<project name="eclipselink.jpa.test" default="build" basedir=".">
    <available file="../${ant.project.name}" type="dir" property="jpatest.is.local"/>
    <!-- fail message="Not running from '${ant.project.name}' directory" unless="jpatest.is.local"/ -->

    <dirname  property="jpatest.build.location_temp" file="${ant.file.eclipselink.jpa.test}"/>
    <pathconvert targetos="unix" property="jpatest.build.location">
        <path>
            <pathelement location="${jpatest.build.location_temp}"/>
        </path>
    </pathconvert>
    <property name="env" environment="env" value="env"/>

    <!-- Allows a user to overide certain user specific properties. -->
    <!-- local property overrides -->
    <condition property="custom.bld.properties.message"
        value="Loading ${user.home}/build.properties"
        else="Skipping ${user.home}/build.properties, file does not exist">
        <available file="${user.home}/build.properties"/>
    </condition>
    <echo message="${custom.bld.properties.message}"/>
    <property file="${user.home}/build.properties"/>

    <condition property="custom.cmd.properties.message"
        value="Loading ${test.properties}"
        else="Skipping ${test.properties}, file does not exist">
        <and>
            <isset property="test.properties"/>
            <available file="${test.properties}"/>
        </and>
    </condition>
    <echo message="${custom.cmd.properties.message}"/>
    <property file="${test.properties}"/>

    <condition property="custom.tst.properties.message"
        value="Loading ${user.home}/test.properties"
        else="Skipping ${user.home}/test.properties, file does not exist">
        <available file="${user.home}/test.properties"/>
    </condition>
    <echo message="${custom.tst.properties.message}"/>
    <property file="${user.home}/test.properties"/>

    <condition property="custom.local.properties.message"
        value="Loading ${basedir}/local.build.properties"
        else="Skipping ${basedir}/local.build.properties, file does not exist">
        <available file="${basedir}/local.build.properties"/>
    </condition>
    <echo message="${custom.local.properties.message}"/>
    <property file="${basedir}/local.build.properties"/>

    <!-- property name="jpatest.basedir" value="."/ -->

    <!-- Allows override of the build location or "basedir" for specific configurations (can specifically define jpatest.basedir) -->
    <property name="jpatest.basedir" value="${jpatest.build.location}"/>
    <property file="${jpatest.basedir}/antbuild.properties"/>
    <!-- Allows specific suites/configurations to override defaults and add custom test (runtime) properties -->
    <property file="${jpatest.basedir}/${test.properties}"/>
    <property file="${jpatest.basedir}/test.properties"/>
    <property name="eclipselink.jpa.test.dir" value="${jpatest.basedir}"/>

    <!-- This checks if the trunk was checked out, or just the Eclipse projects. -->
    <!-- To run from another location be sure to override jpatest.basedir appropriately -->
    <condition property="jpatest.2.base.dir" value="${jpatest.basedir}/../.." else="${jpatest.basedir}/..">
        <contains string="${jpatest.build.location}" substring="jpa/${ant.project.name}"/>
    </condition>
    <property name="jpatest.2.common.plugins.dir"       value="${jpatest.2.base.dir}/plugins"/>
    <property name="jpatest.2.jpa.plugins.dir"          value="${jpatest.2.base.dir}/jpa/plugins"/>
    <property name="jpatest.2.coretest.dir"             value="${jpatest.2.base.dir}/foundation/eclipselink.core.test"/>
    <property name="jpatest.2.oracle.dir"               value="${jpatest.2.base.dir}/foundation/org.eclipse.persistence.oracle"/>
    <property name="jpatest.2.oracletest.dir"           value="${jpatest.2.base.dir}/foundation/eclipselink.extension.oracle.test"/>
    <property name="jpatest.2.oracle.spatial.test.dir"  value="${jpatest.2.base.dir}/foundation/eclipselink.extension.oracle.spatial.test"/>
    <property name="jpatest.2.oracle.nosqltest.dir"     value="${jpatest.2.base.dir}/foundation/eclipselink.extension.oracle.nosql.test"/>
    <property name="jpatest.2.sdo.plugins.dir"          value="${jpatest.2.base.dir}/sdo/plugins"/>
    <property name="oracle.extensions.depend.dir"       value="${jpatest.2.base.dir}/../extension.oracle.lib.external"/>

    <property name="jacocoagent.lib" value="${extensions.depend.dir}/${jacocoagent.jar}"/>

    <property name="version.qualifier"     value="qualifier"/>
    <property name="version.string"        value="${release.version}.${version.qualifier}"/>

    <property name="modelgen.jar" value="${eclipselink.modelgen.prefix}_${version.string}.jar"/>
    <property name="projectcache.dir"       value="pcfile"/>

    <!-- JVM used to run tests -->
    <property name="test.junit.jvm" value="${env.JAVA_HOME}"/>
    <property name="test.junit.jvm.exec" value="${test.junit.jvm}/bin/java"/>

    <echo message="modelgen.jar                         = '${modelgen.jar}'"/>
    <echo message="ant.project.name                     = '${ant.project.name}'"/>
    <echo message="jpatest.build.location               = '${jpatest.build.location}'"/>
    <echo message="jpatest.2.base.dir                   = '${jpatest.2.base.dir}'"/>
    <echo message="jpatest.2.common.plugins.dir         = '${jpatest.2.common.plugins.dir}'"/>
    <echo message="jpatest.2.jpa.plugins.dir            = '${jpatest.2.jpa.plugins.dir}'"/>
    <echo message="jpatest.2.coretest.dir               = '${jpatest.2.coretest.dir}'"/>
    <echo message="jpatest.2.oracle.dir                 = '${jpatest.2.oracle.dir}'"/>
    <echo message="jpatest.2.oracletest.dir             = '${jpatest.2.oracletest.dir}'"/>
    <echo message="jpatest.2.oracle.spatial.test.dir    = '${jpatest.2.oracle.spatial.test.dir}'"/>
    <echo message="jpatest.2.sdo.plugins.dir            = '${jpatest.2.sdo.plugins.dir}' (for GF)"/>

    <import file="${jpatest.2.oracletest.dir}/oracle-db-setup.xml"/>

    <!-- Allows we run websphere tests from Windows & Linux both. -->
    <target name="detect-os">
        <condition property="is.windows" value="true">
            <os family="windows"/>
        </condition>
        <condition property="is.unix" value="true">
            <os family="unix"/>
        </condition>
        <condition property="suffix" value="bat">
            <isset property="is.windows"/>
        </condition>
        <condition property="suffix" value="sh">
            <isset property="is.unix"/>
        </condition>
    </target>

    <!-- This checks if the tests are run on Oracle database -->
    <condition property="is.oracle">
        <contains string="${db.driver}" substring="oracle"/>
    </condition>

    <!-- This checks if the environment is ready for proxy authentication tests -->
    <condition property="is.ready.for.proxy.authentication">
        <and>
            <isset property="is.oracle"/>
            <contains string="${oracle.proxy.authentication.is.setup}" substring="true"/>
        </and>
    </condition>

    <!-- This checks if the Application Server is GlassFish -->
    <condition property="is.glassfish">
        <contains string="${server.name}" substring="glassfish"/>
    </condition>

    <condition property="is.glassfish.or.weblogic">
        <or>
            <contains string="${server.name}" substring="glassfish"/>
            <contains string="${server.name}" substring="weblogic"/>
        </or>
    </condition>
    <!-- This checks if the Application Server is JBoss -->
    <condition property="is.jboss">
        <or>
            <contains string="${server.name}" substring="jboss"/>
            <contains string="${server.name}" substring="wildfly"/>
        </or>
    </condition>

    <!-- This checks if the Application Server is WebSphere -->
    <condition property="is.websphere">
        <contains string="${server.name}" substring="websphere"/>
    </condition>

    <!-- This checks if the Apllication Server is WebLogic -->
    <condition property="is.weblogic">
        <contains string="${server.name}" substring="weblogic"/>
    </condition>

    <!-- This checks if static weaving enabled -->
    <condition property="is.static.server.weaving">
        <contains string="${server.weaving}" substring="static"/>
    </condition>

    <!-- This checks if testing on nonJTA DS -->
    <condition property="is.nonjta.datasource">
        <contains string="${is.JTA}" substring="false"/>
    </condition>

    <!-- This checks if testing on GlassFish with nonJTA DS  -->
    <condition property="is.glassfish.nonjta.datasource">
        <and>
            <contains string="${is.JTA}" substring="false"/>
            <contains string="${server.name}" substring="glassfish"/>
        </and>
    </condition>

    <!-- Define Spring jars needed for running JPA tests on Spring -->
    <path id="spring.path">
            <fileset dir="${spring.jlib.dir}" includes="${spring.jlib}"/>
            <pathelement path="."/>
    </path>
    <!-- This checks if the Aplication Server is applicable to run oracle jpa/customfeatures model on oracle db-->
    <condition property="run.jpa.customfeatures.model">
        <and>
            <contains string="${db.driver}" substring="oracle"/>
            <or>
                <istrue value="${is.weblogic}"/>
                <!--istrue value="${is.websphere}"/-->
                <istrue value="${is.jboss}"/>
                <istrue value="${is.glassfish}"/>
            </or>
        </and>
    </condition>

    <available file="${jpatest.2.common.plugins.dir}/${modelgen.jar}" property="modelgen.jar.exist"/>

    <condition property="validate.jar.exists">
        <and>
            <available file="${jpatest.2.common.plugins.dir}/${validation-impl.jar}" />
            <available file="${extensions.depend.dir}/${jboss-logging.jar}" />
            <available file="${extensions.depend.dir}/${javax.el.jar}" />
            <available file="${extensions.depend.dir}/${classmate.jar}" />
        </and>
    </condition>

    <target name="set-server-properties">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${jpatest.basedir}/${server.name}.properties"/>

        <condition property="SERVER.URL" value="${server.url}">
            <or>
                <isset property="is.websphere"/>
                <isset property="is.jboss"/>
            </or>
        </condition>
        <condition property="SERVER.TESTRUNNER" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER1" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner1}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER2" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner2}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER3" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner3}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER4" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner4}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER5" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner5}">
            <isset property="is.jboss"/>
        </condition>
        <condition property="SERVER.TESTRUNNER6" value="${MODEL_NAME}/${MODEL_NAME}_ejb/${server.testrunner6}">
            <isset property="is.jboss"/>
        </condition>
        <property name="SERVER.URL" value="${server.url}${MODEL_NAME}"/>
        <property name="SERVER.TESTRUNNER" value="${server.testrunner}"/>
        <property name="SERVER.TESTRUNNER1" value="${server.testrunner1}"/>
        <property name="SERVER.TESTRUNNER2" value="${server.testrunner2}"/>
        <property name="SERVER.TESTRUNNER3" value="${server.testrunner3}"/>
        <property name="SERVER.TESTRUNNER4" value="${server.testrunner4}"/>
        <property name="SERVER.TESTRUNNER5" value="${server.testrunner5}"/>
        <property name="SERVER.TESTRUNNER6" value="${server.testrunner6}"/>

        <condition property="DS_NAME" value="java:/EclipseLinkDS">
            <isset property="is.jboss"/>
        </condition>
        <condition property="DS_NAME" value="jdbc/EclipseLinkDS">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="DS2_NAME" value="java:/EclipseLinkDS2">
            <isset property="is.jboss"/>
        </condition>
        <condition property="DS2_NAME" value="jdbc/EclipseLinkDS2">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="DS3_NAME" value="java:/EclipseLinkDS3">
            <isset property="is.jboss"/>
        </condition>
        <condition property="DS3_NAME" value="jdbc/EclipseLinkDS3">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="NONJTA_DS_NAME" value="java:/ELNonJTADS">
            <isset property="is.jboss"/>
        </condition>
        <condition property="NONJTA_DS_NAME" value="jdbc/ELNonJTADS">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="NONJTA_DS2_NAME" value="java:/ELNonJTADS2">
            <isset property="is.jboss"/>
        </condition>
        <condition property="NONJTA_DS2_NAME" value="jdbc/ELNonJTADS2">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="NONJTA_DS3_NAME" value="java:/ELNonJTADS3">
            <isset property="is.jboss"/>
        </condition>
        <condition property="NONJTA_DS3_NAME" value="jdbc/ELNonJTADS3">
            <not>
                <isset property="is.jboss"/>
            </not>
        </condition>

        <condition property="SESSION_DS_NAME" value="jdbc/${DS_NAME}">
            <contains string="${server.name}" substring="netweaver"/>
        </condition>
        <condition property="SESSION_DS_NAME" value="${DS_NAME}">
            <not>
                <isset property="is.netweaver"/>
            </not>
        </condition>

        <condition property="is.grid.testing">
            <contains string="${grid}" substring="true"/>
        </condition>

        <condition property="is.kryo.testing">
            <contains string="${kryo}" substring="true"/>
        </condition>

        <condition property="is.jpars.testing">
            <contains string="${MODEL_NAME}" substring="eclipselink-jpars-model"/>
        </condition>

        <condition property="jpars.url" value="http://${weblogic.host}:${weblogic.port}">
            <contains string="${server.name}" substring="weblogic"/>
        </condition>

        <condition property="jpars.url" value="http://${glassfish.host}:8080">
            <contains string="${server.name}" substring="glassfish"/>
        </condition>
    </target>

    <target name="config-classpath">
        <config-compile-path/>
        <config-run-path/>
    </target>

    <macrodef name="config-compile-path">
        <sequential>
        <echo message="Configuring compile.path to:"/>
        <!-- echo message="   '${jpatest.2.coretest.dir}/${classes.dir}'"/ -->
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.jar}'"/>
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.framework.jar}'"/>
        <echo message="   '${jpatest.2.jpa.plugins.dir}/${persistence20.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${javax.validation.jar}'"/>
        <echo message="   '${jpatest.2.base.dir}/${eclipselink.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${annotation-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${jaxb-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${ejb.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${transaction.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${restfulws.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${resource.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${inject.jar}'"/>
        <echo message="   '${junit.lib}'"/>
        <echo message="   '${jacocoagent.lib}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.antlr_*.jar'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.nosql_*.jar'"/>
        <echo message="   "/>
        <path id="compile.path">
            <!-- pathelement path="${jpatest.2.coretest.dir}/${classes.dir}"/ -->
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.jar}"/>
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.framework.jar}"/>
            <pathelement path="${jpatest.2.jpa.plugins.dir}/${persistence20.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${javax.validation.jar}"/>
            <pathelement path="${jpatest.2.base.dir}/${eclipselink.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${annotation-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${jaxb-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${ejb.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${transaction.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${restfulws.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${resource.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${inject.jar}"/>
            <pathelement path="${junit.lib}"/>
            <pathelement path="${jacocoagent.lib}"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.antlr_*.jar"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.nosql_*.jar"/>
            <!-- Needed for performance tests comparing with hibernate.>
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset-->
            <!-- Needed for tests using coherence.>
            <fileset dir="${coherence.dir}">
                <include name="*.jar"/>
            </fileset-->
        </path>
        <echo message="Configuring jpa21.compile.path to:"/>
        <!-- echo message="   '${jpatest.2.coretest.dir}/${classes.dir}'"/ -->
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.jar}'"/>
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.framework.jar}'"/>
        <echo message="   '${jpatest.2.jpa.plugins.dir}/${persistence21.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${javax.validation.jar}'"/>
        <echo message="   '${jpatest.2.base.dir}/${eclipselink.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${annotation-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${jaxb-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${ejb.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${transaction.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${restfulws.jar}'"/>
        <echo message="   '${junit.lib}'"/>
        <echo message="   '${jacocoagent.lib}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.antlr_*.jar'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.nosql_*.jar'"/>
        <echo message="   "/>
        <path id="jpa21.compile.path">
            <!-- pathelement path="${jpatest.2.coretest.dir}/${classes.dir}"/ -->
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.jar}"/>
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.framework.jar}"/>
            <pathelement path="${jpatest.2.jpa.plugins.dir}/${persistence21.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${javax.validation.jar}"/>
            <pathelement path="${jpatest.2.base.dir}/${eclipselink.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${annotation-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${jaxb-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${ejb.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${transaction.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${restfulws.jar}"/>
            <pathelement path="${junit.lib}"/>
            <pathelement path="${jacocoagent.lib}"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.antlr_*.jar"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.nosql_*.jar"/>
            <!-- Needed for performance tests comparing with hibernate.>
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset-->
            <!-- Needed for tests using coherence.>
            <fileset dir="${coherence.dir}">
                <include name="*.jar"/>
            </fileset-->
        </path>
        <echo message="Configuring jpa22.compile.path to:"/>
        <!-- echo message="   '${jpatest.2.coretest.dir}/${classes.dir}'"/ -->
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.jar}'"/>
        <echo message="   '${jpatest.2.coretest.dir}/${coretest.framework.jar}'"/>
        <echo message="   '${jpatest.2.jpa.plugins.dir}/${persistence22.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${javax.validation.jar}'"/>
        <echo message="   '${jpatest.2.base.dir}/${eclipselink.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${annotation-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${jaxb-api.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${ejb.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${transaction.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${restfulws.jar}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${inject.jar}'"/>
        <echo message="   '${junit.lib}'"/>
        <echo message="   '${jacocoagent.lib}'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.antlr_*.jar'"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/org.eclipse.persistence.nosql_*.jar'"/>
        <echo message="   "/>
        <path id="jpa22.compile.path">
            <!-- pathelement path="${jpatest.2.coretest.dir}/${classes.dir}"/ -->
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.jar}"/>
            <pathelement path="${jpatest.2.coretest.dir}/${coretest.framework.jar}"/>
            <pathelement path="${jpatest.2.jpa.plugins.dir}/${persistence22.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${javax.validation.jar}"/>
            <pathelement path="${jpatest.2.base.dir}/${eclipselink.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${annotation-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${jaxb-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${ejb.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${glassfish-corba-omgapi.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${transaction.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${restfulws.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${inject.jar}"/>
            <pathelement path="${junit.lib}"/>
            <pathelement path="${jacocoagent.lib}"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.antlr_*.jar"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.nosql_*.jar"/>
            <!-- Needed for performance tests comparing with hibernate.>
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset-->
            <!-- Needed for tests using coherence.>
            <fileset dir="${coherence.dir}">
                <include name="*.jar"/>
            </fileset-->
        </path>
        <echo message="Configuring 'compile.modelgen.path' to:"/>
        <echo message="   '${jpatest.2.common.plugins.dir}/${modelgen.jar}'"/>
        <echo message="   and 'compile.path'"/>
        <echo message="  "/>
        <path id="compile.modelgen.path">
            <pathelement path="${jpatest.2.common.plugins.dir}/${modelgen.jar}"/>
            <path refid="compile.path"/>
        </path>
        <echo message="Configuring 'compile.server.path' to:"/>
        <echo message="   'compile.path'"/>
        <echo message="   '${oracle.extensions.depend.dir}/${oracle.sdoapi.jar}'"/>
        <echo message="   '../../../extension.lib.external/mongo.jar'"/>
        <echo message="  "/>
        <path id="compile.server.path">
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.sdoapi.jar}"/>
            <pathelement path="../../../extension.lib.external/mongo.jar"/>
        </path>
        <path id="compile.jpa21.server.path">
            <path refid="jpa21.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.sdoapi.jar}"/>
            <pathelement path="../../../extension.lib.external/mongo.jar"/>
        </path>
        <path id="compile.jpa22.server.path">
            <path refid="jpa22.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.sdoapi.jar}"/>
            <pathelement path="../../../extension.lib.external/mongo.jar"/>
        </path>
        </sequential>
    </macrodef>

    <!-- Default ant target, compiles and packages test jars, does not run tests. -->
    <target name="build" depends="clean, init, compile, package" description="build EclipseLink JPA testing jars"/>

    <target name="clean" description="Clean the build" depends="cleanup-merge-inherited-ddl, cleanup-non-jta-ds-servertest">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/${classes.dir}"/>
            <fileset dir="${jpatest.basedir}/classes21"/>
            <fileset dir="${jpatest.basedir}/classes22"/>
            <fileset dir="${jpatest.basedir}/${build.dir}"/>
            <fileset file="${jpatest.basedir}/${jpa.test.jar}"/>
            <fileset file="${jpatest.basedir}/${jpa21.test.jar}"/>
            <fileset file="${jpatest.basedir}/${jpa22.test.jar}"/>
            <fileset file="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <fileset file="${jpatest.basedir}/*-model.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.jpa21.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.jpa22.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.only.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.extended.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.advanced.properties}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar"/>
            <fileset file="${jpatest.basedir}/eclipselink-partitioned-model.jar"/>
            <fileset file="${jpatest.basedir}/eclipselink-plsql-model.jar"/>
            <!--fileset file="${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar"/-->
            <fileset file="${jpatest.basedir}/${jpa.performance}.jar"/>
            <fileset file="${jpatest.basedir}/${jpa.performance2}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.metamodel.model}.jar"/>
            <fileset file="${jpatest.basedir}/woven*.jar"/>
            <fileset file="${jpatest.basedir}/*.ear"/>
            <fileset file="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.delimited.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.extensibility.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.beanvalidation.dynamic.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_1}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_2}.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_3}.jar"/>
            <fileset file="${jpatest.basedir}/eclipselink-remote.jar"/>
            <fileset file="${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar"/>
        </delete>
    </target>


    <!-- Creates required directories for building. -->
    <target name="init">
        <mkdir dir="${jpatest.basedir}/${run.dir}"/>
        <mkdir dir="${jpatest.basedir}/${classes.dir}"/>
        <mkdir dir="${jpatest.basedir}/${classes21.dir}"/>
        <mkdir dir="${jpatest.basedir}/${classes22.dir}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa21.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa22.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.annotation.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.only.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.merge.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.validation.failed.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.properties}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.spaces}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/eclipselink-partitioned-model"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/eclipselink-plsql-model"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.cascade.deletes}"/>
        <!--mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.multibyte}"/-->
        <mkdir dir="${jpatest.basedir}/${build.dir}/${jpa.performance}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${jpa.performance2}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.metamodel.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.delimited.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.extensibility.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.dynamic.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_1}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_2}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_3}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_1}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_2}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_3}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_1}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_2}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_3}"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/eclipselink-remote"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.mapping.metadata.complete}"/>
    </target>

    <target name="model-compile" description="compile models that need canonical processing">
        <javac
            srcdir="${SRC_PATH}"
            destdir="${DEST_PATH}"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="${MODEL_PATH}/**/*.java"/>
            <!-- compilerarg value="-Xlint:unchecked" compiler="javac1.7"/ -->
            <compilerarg value="-Aeclipselink.persistencexml=${PERSISTENCE_XML_PATH}"/>
            <!-- compilerarg value="-Aeclipselink.canonicalmodel.prefix=_" compiler="javac1.7"/ -->
           <classpath refid="${COMPILE_PATH_REF}"/>
        </javac>
    </target>

    <target name="prepare-modelgen-xml" depends="set-server-properties">
        <copy todir="${jpatest.build.location}/${classes.dir}">
            <fileset dir="${jpatest.build.location}/${resource.dir}" includes="eclipselink-inheritance-model/server/persistence.xml"/>
        </copy>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@transaction-type@' value="RESOURCE_LOCAL"/>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@datasource-type@' value="jta-data-source"/>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@data-source-name@' value="${DS_NAME}"/>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@server-weaving@' value="${server.weaving}"/>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@database-platform@' value="${db.platform}"/>
        <replace file="${jpatest.build.location}/${classes.dir}/eclipselink-inheritance-model/server/persistence.xml"
                 token='@server-platform@' value="${server.platform}"/>
    </target>

    <!-- Compiles all tests. -->
    <target name="compile" description="compile EclipseLink testing"
            depends="init, config-classpath,
                     compile-with-modelgen, compile-standard, compile-jpa21-standard, compile-jpa22-standard, compile-springplatform, compile-criteria, compile-fullregression"/>

    <target name="compile-with-modelgen" depends="prepare-modelgen-xml">
        <!-- ModelGen debug code: should never fail, but in production even if it would we don't want to stop so commented out -->
        <!-- fail message="'${jpatest.2.common.plugins.dir}/${modelgen.jar}' not found." unless="modelgen.jar.exist"/ -->
        <copy todir="${jpatest.build.location}/${classes.dir}">
            <fileset dir="${jpatest.build.location}/${resource.dir}" includes="eclipselink-canonical-meta-model/persistence.xml"/>
        </copy>
        <copy todir="${jpatest.build.location}/${classes.dir}">
            <fileset dir="${jpatest.build.location}/${resource.dir}" includes="eclipselink-metamodel-model/persistence.xml"/>
        </copy>
        <!-- Copy to META-INF because IBM Compiler apparently is no longer recognizing -A (temporary) -->
        <copy todir="${jpatest.build.location}/${classes.dir}/META-INF">
            <fileset dir="${jpatest.build.location}/${resource.dir}/eclipselink-canonical-meta-model" includes="persistence.xml"/>
        </copy>
        <copy todir="${jpatest.build.location}/${classes.dir}/META-INF">
            <fileset dir="${jpatest.build.location}/${resource.dir}/eclipselink-metamodel-model" includes="persistence.xml"/>
        </copy>
        <antcall target="model-compile" inheritRefs="true">
            <param name="SRC_PATH" value="${jpatest.basedir}/${src.dir}"/>
            <param name="DEST_PATH" value="${jpatest.basedir}/${classes.dir}"/>
            <param name="MODEL_PATH" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="PERSISTENCE_XML_PATH" value="eclipselink-canonical-meta-model/persistence.xml"/>
            <param name="COMPILE_PATH_REF" value="compile.modelgen.path"/>
        </antcall>
        <antcall target="model-compile" inheritRefs="true">
            <param name="SRC_PATH" value="${jpatest.basedir}/${src.dir}"/>
            <param name="DEST_PATH" value="${jpatest.basedir}/${classes.dir}"/>
            <param name="MODEL_PATH" value="org/eclipse/persistence/testing/models/jpa/inheritance"/>
            <param name="PERSISTENCE_XML_PATH" value="eclipselink-inheritance-model/server/persistence.xml"/>
            <param name="COMPILE_PATH_REF" value="compile.modelgen.path"/>
        </antcall>
        <antcall target="model-compile" inheritRefs="true">
            <param name="SRC_PATH" value="${jpatest.basedir}/${src.dir}"/>
            <param name="DEST_PATH" value="${jpatest.basedir}/${classes.dir}"/>
            <param name="MODEL_PATH" value="org/eclipse/persistence/testing/models/jpa/inherited"/>
            <param name="PERSISTENCE_XML_PATH" value="eclipselink-inheritance-model/server/persistence.xml"/>
            <param name="COMPILE_PATH_REF" value="compile.modelgen.path"/>
        </antcall>
        <antcall target="model-compile" inheritRefs="true">
            <param name="SRC_PATH" value="${jpatest.basedir}/${src.dir}"/>
            <param name="DEST_PATH" value="${jpatest.basedir}/${classes.dir}"/>
            <param name="MODEL_PATH" value="org/eclipse/persistence/testing/models/jpa/metamodel"/>
            <param name="PERSISTENCE_XML_PATH" value="eclipselink-metamodel-model/persistence.xml"/>
            <param name="COMPILE_PATH_REF" value="compile.modelgen.path"/>
        </antcall>
        <!-- This persistence.xml MUST be deleted because tests will pick it up otherwise and fail -->
        <delete dir="${jpatest.build.location}/${classes.dir}/META-INF"/>
        <available file="${jpatest.build.location}/${classes.dir}/org/eclipse/persistence/testing/models/jpa/advanced/Address_.class" property="modelgen.created.classes.exist"/>
    </target>

    <!-- Excluding JPA 2.1 tests: when both jpa2.0 compatability (2.0 compiled), and 2.1 functionality testing (2.1 compiled) need to be performed a "jpa20.compile.classpath" will need to be used -->
    <target name="compile-standard">
        <javac srcdir="${jpatest.basedir}/${src.dir}"
               destdir="${jpatest.basedir}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               encoding="UTF-8"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa21/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa22/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/advanced/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/metamodel/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa21/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa22/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/JUnitCriteriaMetamodelTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/deployment/CompositeEnumerationTest.java"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <!-- Prototype only: intended for the time when both jpa2.0 compatability (2.0 compiled), and 2.1 functionality testing (2.1 compiled) will need to be performed -->
    <target name="compile-jpa21-standard">
        <javac srcdir="${jpatest.basedir}/${src.dir}"
               destdir="${jpatest.basedir}/classes21"
               debug="${javac.debug}"
               encoding="UTF-8"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa22/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/advanced/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/metamodel/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa22/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel*.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/JUnitCriteriaMetamodelTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/deployment/CompositeEnumerationTest.java"/>
            <classpath>
                <path refid="jpa21.compile.path"/>
            </classpath>
        </javac>
    </target>

    <!-- Prototype only: intended for the time when both jpa2.0 compatability (2.0 compiled), and 2.2 functionality testing (2.2 compiled) will need to be performed -->
    <target name="compile-jpa22-standard">
        <javac srcdir="${jpatest.basedir}/${src.dir}"
               destdir="${jpatest.basedir}/classes22"
               debug="${javac.debug}"
               encoding="UTF-8"
               debuglevel="${javac.debuglevel}"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/advanced/**"/>
            <exclude name="org/eclipse/persistence/testing/models/jpa/metamodel/**"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel*.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/criteria/JUnitCriteriaMetamodelTestSuite.java"/>
            <exclude name="org/eclipse/persistence/testing/tests/jpa/deployment/CompositeEnumerationTest.java"/>
            <classpath>
                <path refid="jpa22.compile.path"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-fullregression">
        <javac srcdir="${jpatest.basedir}/${src.dir}"
               destdir="${jpatest.basedir}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               encoding="UTF-8"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/tests/jpa/FullRegressionTestSuite.java"/>
            <include name="org/eclipse/persistence/testing/tests/jpa/AllCMP3TestRunModel*.java"/>
            <include name="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-springplatform" depends="proxy" if="is.spring">
        <get dest="${spring.jlib.dir}">
            <url url="http://central.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar"/>
            <url url="http://central.maven.org/maven2/cglib/cglib-nodep/3.2.2/cglib-nodep-3.2.2.jar"/>
            <url url="http://central.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar"/>
            <url url="http://central.maven.org/maven2/jotm/jotm/2.0.10/jotm-2.0.10.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-context/4.2.5.RELEASE/spring-context-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-test/4.2.5.RELEASE/spring-test-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-core/4.2.5.RELEASE/spring-core-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-beans/4.2.5.RELEASE/spring-beans-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-jdbc/4.2.5.RELEASE/spring-jdbc-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-aop/4.2.5.RELEASE/spring-aop-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-tx/4.2.5.RELEASE/spring-tx-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-orm/4.2.5.RELEASE/spring-orm-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-expression/4.2.5.RELEASE/spring-expression-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/org/springframework/spring-instrument/4.2.5.RELEASE/spring-instrument-4.2.5.RELEASE.jar"/>
            <url url="http://central.maven.org/maven2/com/experlog/xapool/1.6-beta/xapool-1.6-beta.jar"/>
        </get>
        <javac srcdir="${eclipselink.jpa.spring.test}/${src.dir}"
               destdir="${jpatest.basedir}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               encoding="UTF-8"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/framework/server/**"/>
            <classpath>
                <path refid="compile.path"/>
                <path refid="spring.path"/>
            </classpath>
        </javac>
    </target>

    <target name="proxy" if="http.proxyHost">
        <setproxy proxyhost="${http.proxyHost}" proxyport="${http.proxyPort}"/>
    </target>

    <target name="compile-criteria" if="modelgen.created.classes.exist">
       <!--  Compile the Modelgen (criteria metamodel) Tests -->
       <!--  *** Depends upon JPA Test Framework having been compiled already -->
       <echo message="Compile the Modelgen (criteria metamodel) Tests"/>
       <javac srcdir="${jpatest.basedir}/${src.dir}"
               destdir="${jpatest.build.location}/${classes.dir}"
               debug="${javac.debug}"
               debuglevel="${javac.debuglevel}"
               encoding="UTF-8"
               optimize="${javac.optimize}"
               source="${javac.version}"
               target="${javac.version}"
               deprecation="${javac.deprecation}"
               failonerror="true">
            <include name="org/eclipse/persistence/testing/tests/jpa/criteria/JunitCriteriaMetamodelTestSuite.java"/>
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </javac>
    </target>

    <!-- Packages JPA persistent unit test jars. -->
    <target name="package" depends="config-classpath, package-annotation, package-ddl, package-xml-only, package-xml-merge, package-jpa21-model,
    package-jpa22-model, package-xml-extended, package-validation-failed, package-jpa-advanced-field-access, package-jpa-advanced-properties,
    package-jpa-pu_with_spaces, package-partitioned, package-plsql, package-jpa-performance, package-jpa-performance2, package-cascade-deletes,
    package-jpa-metamodel, package-delimited, package-beanvalidation, package-beanvalidation-dynamic, package-composite-advanced,
    package-composite-advanced-member_1, package-composite-advanced-member_2, package-composite-advanced-member_3, package-xml-composite-advanced,
    package-xml-composite-advanced-member_1, package-xml-composite-advanced-member_2, package-xml-composite-advanced-member_3,
    package-xml-extended-composite-advanced, package-xml-extended-composite-advanced-member_1, package-xml-extended-composite-advanced-member_2, 
    package-xml-extended-composite-advanced-member_3, package-extensibility, package-jpa-remote, package-xml-mapping-metadata-complete" description="build EclipseLink jar">
        <jar jarfile="${jpatest.basedir}/${jpatest.framework.jar}">
           <fileset dir="${jpatest.basedir}/${classes.dir}"  includes="org/eclipse/persistence/testing/framework/**/*.class"/>
        </jar>
        <jar jarfile="${jpatest.basedir}/${jpa.test.jar}">
           <fileset dir="${jpatest.basedir}/${classes.dir}"
                    includes="org/eclipse/persistence/testing/tests/**/*.class"
                    excludes="org/eclipse/persistence/testing/framework/**/*.class,
                             org/eclipse/persistence/testing/tests/jpa21/**/*.class,
                             org/eclipse/persistence/testing/tests/jpa22/**/*.class"/>
        </jar>
        <jar jarfile="${jpatest.basedir}/${jpa21.test.jar}">
           <fileset dir="${jpatest.basedir}/classes21"
                    includes="org/eclipse/persistence/testing/tests/**/*.class"
                    excludes="org/eclipse/persistence/testing/framework/**/*.class,
                             org/eclipse/persistence/testing/tests/jpa22/**/*.class"/>
        </jar>
        <jar jarfile="${jpatest.basedir}/${jpa22.test.jar}">
           <fileset dir="${jpatest.basedir}/classes22"
                    includes="org/eclipse/persistence/testing/tests/**/*.class,org/eclipse/samples/*"
                    excludes="org/eclipse/persistence/testing/framework/**/*.class,
                             org/eclipse/persistence/testing/tests/jpa21/**/*.class"/>
        </jar>
    </target>

    <!-- Copy Spring specified ***spring.xml, appContext.properties and persistence.xml to default build location-->
    <target name="prepare-spring-xmls" depends="init, config-classpath" if="is.spring">
        <copy todir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}">
            <fileset dir="${eclipselink.jpa.spring.test}/resource/jpa-spring" includes="appContext.properties"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}/META-INF" overwrite="true">
            <fileset dir="${jpatest.basedir}/${resource.dir}/${MODEL_NAME}" includes="persistence.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}">
            <fileset dir="${eclipselink.jpa.spring.test}/resource/jpa-spring" includes="**spring.xml"/>
        </copy>
        <replace dir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}" token='@dbURL@' value="${db.url}">
            <include name="appContext.properties"/>
            <include name="META-INF/persistence.xml"/>
            <include name="**spring.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}" token='@driverClass@' value="${db.driver}">
            <include name="appContext.properties"/>
            <include name="META-INF/persistence.xml"/>
            <include name="**spring.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}" token='@dbUser@' value="${db.user}">
            <include name="appContext.properties"/>
            <include name="META-INF/persistence.xml"/>
            <include name="**spring.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}" token='@dbPassword@' value="${db.pwd}">
            <include name="appContext.properties"/>
            <include name="**/persistence.xml"/>
            <include name="**spring.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}" token='@dbPlatform@' value="${db.platform}">
            <include name="appContext.properties"/>
            <include name="**/persistence.xml"/>
            <include name="**spring.xml"/>
        </replace>
    </target>

    <!-- Copy OSGi specified persistence.xml to default build location-->
    <target name="prepare-osgi-xmls" depends="init, config-classpath" if="is.osgi">
        <condition property="TEST_WEAVING" value="true" else="false">
            <equals arg1="${test.weaving}" arg2="-DTEST_NO_WEAVING=false" casesensitive="false" trim="true"/>
        </condition>
        <copy todir="${jpatest.basedir}/${build.dir}/${MODEL_NAME}/META-INF" overwrite="true">
            <fileset dir="${jpatest.basedir}/${resource.dir}/${MODEL_NAME}/osgi" includes="persistence.xml"/>
        </copy>
        <replaceregexp file="${jpatest.basedir}/${build.dir}/${MODEL_NAME}/META-INF/persistence.xml"
            match='property name="eclipselink.weaving"\s+value="false"'
            replace='property name="eclipselink.weaving" value="${TEST_WEAVING}"'
        />
    </target>

    <target name="package-annotation" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.annotation.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.annotation.model}" includes="*.xml"/>
        </copy>
        <!-- copy jaxb index, properties files -->
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.annotation.model}/">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.annotation.model}" includes="org/eclipse/persistence/testing/models/jpa/lob/*"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.annotation.model}">
            <!-- 248780: exclude copies of classes from this eclipselink-annotation-model.jar if weaving is disabled in any other jar -->
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/advanced/**
                               org/eclipse/persistence/testing/models/jpa/cacheable/**
                               org/eclipse/persistence/testing/models/jpa/cascadedeletes/**
                               org/eclipse/persistence/testing/models/jpa/complexaggregate/**
                               org/eclipse/persistence/testing/models/jpa/customer/**
                               org/eclipse/persistence/testing/models/jpa/datatypes/**
                               org/eclipse/persistence/testing/models/jpa/datetime/**
                               org/eclipse/persistence/testing/models/jpa/inheritance/**
                               org/eclipse/persistence/testing/models/jpa/inherited/**
                               org/eclipse/persistence/testing/models/jpa/lob/**
                               org/eclipse/persistence/testing/models/nativeapitest/**
                               org/eclipse/persistence/testing/models/jpa/orphanremoval/**
                               org/eclipse/persistence/testing/models/jpa/privateowned/**
                               org/eclipse/persistence/testing/models/jpa/relationships/**
                               org/eclipse/persistence/testing/models/jpa/sessionbean/**
                               org/eclipse/persistence/testing/models/jpa/virtualattribute/**"/>
        </copy>
        <antcall target="prepare-spring-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.annotation.model}"/>
        </antcall>
        <antcall target="prepare-osgi-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.annotation.model}"/>
        </antcall>
        <jar jarfile="${jpatest.basedir}/${eclipselink.annotation.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.annotation.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-mapping-metadata-complete" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.mapping.metadata.complete}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.mapping.metadata.complete}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.mapping.metadata.complete}/">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.mapping.metadata.complete}" includes="org/eclipse/persistence/testing/models/jpa/xml/xmlmetadatacomplete/*"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.mapping.metadata.complete}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/xmlmetadatacomplete/**"/>
        </copy>
        <antcall target="prepare-spring-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.xml.mapping.metadata.complete}"/>
        </antcall>
        <antcall target="prepare-osgi-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.xml.mapping.metadata.complete}"/>
        </antcall>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.mapping.metadata.complete}">
            </fileset>
        </jar>
    </target>

    <target name="package-ddl" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.ddl.generation.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.ddl.generation.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.ddl.generation.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/ddlgeneration/**,
                                org/eclipse/persistence/testing/models/jpa/xml/merge/inherited/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.ddl.generation.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-only" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.only.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.only.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.only.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/**"
                     excludes="org/eclipse/persistence/testing/models/jpa/xml/merge/**
                               org/eclipse/persistence/testing/models/jpa/xml/composite/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.only.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.only.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-cascade-deletes" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.cascade.deletes}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.cascade.deletes}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.cascade.deletes}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/cascadedeletes/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.cascade.deletes}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa21-model" depends="">
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa21.model}/META-INF">
          <fileset dir="${jpatest.basedir}/resource/${eclipselink.jpa21.model}" includes="*.xml, *.jdbc"/>
      </copy>
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa21.model}">
          <fileset dir="${jpatest.basedir}/classes21"
                   includes="org/eclipse/persistence/testing/models/jpa21/**"/>
      </copy>
      <jar jarfile="${jpatest.basedir}/${eclipselink.jpa21.model}.jar">
          <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa21.model}">
          </fileset>
      </jar>
    </target>

    <target name="package-jpa22-model" depends="">
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa22.model}/META-INF">
          <fileset dir="${jpatest.basedir}/resource/${eclipselink.jpa22.model}" includes="*.xml, *.jdbc"/>
      </copy>
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa22.model}">
          <fileset dir="${jpatest.basedir}/classes22"
                   includes="org/eclipse/persistence/testing/models/jpa22/**"/>
      </copy>
      <jar jarfile="${jpatest.basedir}/${eclipselink.jpa22.model}.jar">
          <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.jpa22.model}">
          </fileset>
      </jar>
    </target>

    <target name="package-xml-extended" depends="">
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.model}/META-INF">
          <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/${eclipselink.xml.extended.model}" includes="*.xml"/>
      </copy>
      <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.model}">
          <fileset dir="${jpatest.basedir}/${classes.dir}"
                   includes="org/eclipse/persistence/testing/models/jpa/xml/advanced/**,
                             org/eclipse/persistence/testing/models/jpa/xml/inheritance/**,
                             org/eclipse/persistence/testing/models/jpa/xml/relationships/**,
                             org/eclipse/persistence/testing/models/jpa/xml/complexaggregate/**"
                   excludes="org/eclipse/persistence/testing/models/jpa/xml/relationships/unidirectional/**"/>
      </copy>
      <jar jarfile="${jpatest.basedir}/${eclipselink.xml.extended.model}.jar">
          <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.model}">
          </fileset>
      </jar>
    </target>

    <target name="package-xml-merge" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.merge.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.merge.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.merge.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/merge/**"
                     excludes="org/eclipse/persistence/testing/models/jpa/xml/merge/inherited/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.merge.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-validation-failed" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.validation.failed.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.validation.failed.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.validation.failed.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/validationfailed/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.validation.failed.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-advanced-field-access" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.advanced.field.access.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}/">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.advanced.field.access.model}" includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships/*"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced/**"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships/**"/>
        </copy>
        <antcall target="prepare-spring-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.advanced.field.access.model}"/>
        </antcall>
        <antcall target="prepare-osgi-xmls" inheritRefs="true">
            <param name="MODEL_NAME" value="${eclipselink.advanced.field.access.model}"/>
        </antcall>
        <jar jarfile="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.field.access.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-remote" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-remote/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-remote" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-remote/">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-remote" includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships/*"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-remote">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced/**"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-remote">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/eclipselink-remote.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/eclipselink-remote">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-advanced-properties" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.properties}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.advanced.properties}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.properties}/">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.advanced.properties}" includes="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties/*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.properties}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.advanced.properties}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.advanced.properties}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-pu_with_spaces" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.spaces}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.pu.with.spaces}" includes="*.xml"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.spaces}">
            </fileset>
        </jar>
    </target>

    <target name="package-partitioned" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-partitioned-model/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-partitioned-model" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-partitioned-model">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/partitioned/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/eclipselink-partitioned-model.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/eclipselink-partitioned-model">
            </fileset>
        </jar>
    </target>

    <target name="package-plsql" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-plsql-model/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-plsql-model" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/eclipselink-plsql-model">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/plsql/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/eclipselink-plsql-model.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/eclipselink-plsql-model">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-pu_with_multibyte" depends="">
        <!--copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.multibyte}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.pu.with.multibyte}" includes="*.xml"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.pu.with.multibyte}">
            </fileset>
        </jar-->
    </target>

    <target name="package-jpa-performance" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${jpa.performance}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${jpa.performance}/META-INF" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${jpa.performance}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/performance/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${jpa.performance}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${jpa.performance}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-performance2" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${jpa.performance2}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${jpa.performance2}/META-INF" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${jpa.performance2}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/performance2/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${jpa.performance2}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${jpa.performance2}">
            </fileset>
        </jar>
    </target>

    <target name="package-jpa-metamodel" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.metamodel.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.metamodel.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.metamodel.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/metamodel/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.metamodel.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.metamodel.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-delimited" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.delimited.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.delimited.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.delimited.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/delimited/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.delimited.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.delimited.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-extensibility" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.extensibility.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.extensibility.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.extensibility.model}">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.extensibility.model}/repository" includes="*.xml, *.properties"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.extensibility.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/extensibility/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.extensibility.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.extensibility.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-beanvalidation" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.beanvalidation.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/beanvalidation/BeanValidationJunitTest*"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-beanvalidation-dynamic" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.dynamic.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.beanvalidation.dynamic.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.dynamic.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/beanvalidation/dynamic/BeanValidationDynamicEntityJunitTest*"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.beanvalidation.dynamic.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.beanvalidation.dynamic.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-composite-advanced" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.composite.advanced.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/composite/advanced/*"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-composite-advanced-member_1" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_1}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.composite.advanced.model.member_1}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_1}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_1/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_1}">
            </fileset>
        </jar>
    </target>

    <target name="package-composite-advanced-member_2" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_2}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.composite.advanced.model.member_2}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_2}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_2/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_2}">
            </fileset>
        </jar>
    </target>

    <target name="package-composite-advanced-member_3" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_3}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.composite.advanced.model.member_3}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_3}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_3/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.composite.advanced.model.member_3}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-composite-advanced" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.composite.advanced.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/*"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-composite-advanced-member_1" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_1}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.composite.advanced.model.member_1}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_1}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_1}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-composite-advanced-member_2" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_2}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.composite.advanced.model.member_2}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_2}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_2}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-composite-advanced-member_3" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_3}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/${eclipselink.xml.composite.advanced.model.member_3}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_3}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.composite.advanced.model.member_3}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-extended-composite-advanced" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/${eclipselink.xml.extended.composite.advanced.model}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/*"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-extended-composite-advanced-member_1" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_1}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/${eclipselink.xml.extended.composite.advanced.model.member_1}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_1}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_1}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_1}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-extended-composite-advanced-member_2" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_2}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/${eclipselink.xml.extended.composite.advanced.model.member_2}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_2}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_2}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_2}">
            </fileset>
        </jar>
    </target>

    <target name="package-xml-extended-composite-advanced-member_3" depends="">
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_3}/META-INF">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/${eclipselink.xml.extended.composite.advanced.model.member_3}" includes="*.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_3}">
            <fileset dir="${jpatest.basedir}/${classes.dir}"
                     includes="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3/**"/>
        </copy>
        <jar jarfile="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_3}.jar">
            <fileset dir="${jpatest.basedir}/${build.dir}/${eclipselink.xml.extended.composite.advanced.model.member_3}">
            </fileset>
        </jar>
    </target>

    <!-- Testing -->

    <!-- Classpath used for running tests. -->
    <macrodef name="config-run-path">
        <sequential>
        <path id="run.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-partitioned-model.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-plsql-model.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.metamodel.model}.jar"/>
            <!--pathelement path="${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${jpatest.basedir}/${eclipselink.delimited.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.extensibility.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-remote.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="jpa21.run.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="jpa21.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-partitioned-model.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-plsql-model.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.metamodel.model}.jar"/>
            <!--pathelement path="${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${jpatest.basedir}/${eclipselink.delimited.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.extensibility.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-remote.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="jpa22.run.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="jpa22.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-partitioned-model.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-plsql-model.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.metamodel.model}.jar"/>
            <!--pathelement path="${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${jpatest.basedir}/${eclipselink.delimited.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.extensibility.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/eclipselink-remote.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="run.bean.validation.classpath">
            <path refid="run.classpath"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${validation-impl.jar}"/>
            <pathelement path="${extensions.depend.dir}/${jboss-logging.jar}"/>
            <pathelement path="${extensions.depend.dir}/${javax.el.jar}"/>
            <pathelement path="${extensions.depend.dir}/${classmate.jar}"/>
            <pathelement path="${extensions.depend.dir}/${javax.validation.jar}"/>
        </path>
        <path id="run.bean.validation.dynamic.classpath">
            <path refid="run.bean.validation.classpath"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.beanvalidation.dynamic.model}.jar"/>
        </path>
        <path id="run.jpa21.classpath">
            <pathelement path="${jpatest.basedir}/${classes21.dir}"/>
            <path refid="jpa21.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa21.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.jpa21.model}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="run.jpa22.classpath">
            <pathelement path="${jpatest.basedir}/${classes22.dir}"/>
            <path refid="jpa22.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa22.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.jpa22.model}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="run.extended.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="run.weaver.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="jpa21.compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
        </path>
        <path id="run.performance.classpath">
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <path refid="compile.path"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance}.jar"/>
            <pathelement path="${jpatest.basedir}/${jpa.performance2}.jar"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
         <path id="run.oracle.classpath">
            <path refid="run.classpath"/>
            <!-- Currently the Oracle extensions are included to allow running Oracle extensions tests from here. -->
            <pathelement path="${jpatest.2.oracletest.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.extension.oracle}/${classes.dir}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.xdb.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.xmlparser.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.orai18n-mapping.jar}"/>
            <pathelement path="${jpatest.2.oracletest.dir}/${eclipselink.timestamptz.model}.jar"/>
            <pathelement path="${jpatest.2.oracletest.dir}/${eclipselink.customfeatures.model}.jar"/>
            <pathelement path="${jpatest.2.oracletest.dir}/${eclipselink.proxyauthentication.model}.jar"/>
            <pathelement path="${jpatest.2.oracletest.dir}/${oracle.jpa.test.jar}"/>
            <pathelement path="${jpatest.2.oracletest.dir}/eclipselink-dcn-model.jar"/>
        </path>
         <path id="run.oracle.spatial.classpath">
            <path refid="run.classpath"/>
            <!-- Currently the Oracle extensions are included to allow running Oracle extensions tests from here. -->
            <pathelement path="${jpatest.2.oracletest.dir}/${classes.dir}"/>
            <pathelement path="${jpatest.2.oracle.spatial.test.dir}/${classes.dir}"/>
            <pathelement path="${eclipselink.extension.oracle}/${classes.dir}"/>
            <pathelement path="${jpatest.2.oracle.spatial.test.dir}/${eclipselink.struct.converter.model}.jar"/>
            <pathelement path="${jpatest.2.oracle.spatial.test.dir}/${oracle.jpa.test.jar}"/>
            <pathelement path="${oracle.extensions.depend.dir}/${oracle.sdoapi.jar}"/>
        </path>
         <path id="run.oracle.nosql.classpath">
            <pathelement path="${jpatest.2.oracle.nosqltest.dir}/${classes.dir}"/>
            <pathelement path="${jpatest.2.oracle.nosql.dir}/${classes.dir}"/>
            <path refid="compile.path"/>
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.oracle.nosql_*.jar"/>
            <pathelement path="${oracle.nosql.jar.dir}/${oracle.nosql.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.2.oracle.nosqltest.dir}/eclipselink-oracle-nosql-test.jar"/>
            <pathelement path="${jpatest.2.oracle.nosqltest.dir}/eclipselink-oracle-nosql-model.jar"/>
        </path>
        </sequential>
    </macrodef>

    <!-- Clean all build generated content. -->
    <target name="clean-test" description="Clean the test">
        <delete dir="${jpatest.basedir}/${report.dir}"/>
        <delete dir="${jpatest.basedir}/${run.dir}"/>
        <mkdir dir="${jpatest.basedir}/${report.dir}"/>
        <mkdir dir="${jpatest.basedir}/${run.dir}"/>
    </target>

    <!-- Test target to initialize a clean database -->
    <target name="clear-database" depends="config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.ClearDatabaseSchemaTest"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
            <param name="TEST_WEAVING_OPTION" value="-Dignore"/>
            <param name="ORM_TESTING" value="-Dignore"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
    </target>

    <!-- Default test target, run the FullRegressionTestSuite -->
    <target name="test" depends="clean-test, config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs LRG (AllCMP3TestRunModel) with agent. -->
    <target name="test-lrg" depends="clean-test, config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="test-dynamic" inheritRefs="true"/>
        <antcall target="test-remote-jpa" inheritRefs="true"/>
        <antcall target="run-bean-validation-tests" inheritRefs="true"/>
        <antcall target="oracle-test" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>
    <!-- Runs LRG (AllCMP3TestRunModel) with agent. -->
    <target name="test-lrg21" depends="clean-test, config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <!-- param name="RUN_PATH" value="run.classpath"/ -->
            <param name="RUN_PATH" value="jpa21.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa21.advanced.JPA21TestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.jpa21.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.weaving.SimpleWeaverTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.weaver.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="test-dynamic" inheritRefs="true"/>
        <!--
        unstable on (public) hudson, needs to be stabilized first
        <antcall target="test-remote-jpa" inheritRefs="true"/>
        -->
        <antcall target="run-bean-validation-tests" inheritRefs="true"/>
        <antcall target="oracle-test" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>
    <!-- Runs LRG (AllCMP3TestRunModel) with agent. -->
    <target name="test-lrg22" depends="clean-test, config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <!-- param name="RUN_PATH" value="run.classpath"/ -->
            <param name="RUN_PATH" value="jpa22.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel2"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <!-- param name="RUN_PATH" value="run.classpath"/ -->
            <param name="RUN_PATH" value="jpa22.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel3"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <!-- param name="RUN_PATH" value="run.classpath"/ -->
            <param name="RUN_PATH" value="jpa22.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel4"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <!-- param name="RUN_PATH" value="run.classpath"/ -->
            <param name="RUN_PATH" value="jpa22.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa22.advanced.JPA22TestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.jpa22.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.weaving.SimpleWeaverTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.weaver.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <!--
        unstable on (public) hudson, needs to be stabilized first
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.dynamic.AllTests"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="test-remote-jpa" inheritRefs="true"/>
        -->
        <antcall target="run-bean-validation-tests" inheritRefs="true"/>
        <antcall target="oracle-test" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Run dynamic entities tests standalone. -->
    <target name="test-dynamic" depends="config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.dynamic.AllTests"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
    </target>

    <!-- Run dynamic entities tests standalone and generate tests report. -->
    <target name="test-dynamic-report" depends="test-dynamic, generate-report"/>

    <!-- Runs JPA 2.0 BeanValidation tests. -->
    <target name="run-bean-validation-tests" depends="config-classpath" if="validate.jar.exists">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.beanvalidation.BeanValidationJunitTest"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.bean.validation.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.beanvalidation.dynamic.BeanValidationDynamicEntityJunitTest"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.bean.validation.dynamic.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
    </target>

    <target name="oracle-test" if="is.oracle" depends="config-classpath">
        <!-- Initializes Oracle database proxy users for ProxyAuthenticationTestSuite. -->
        <property name="pa.proxyuser" value="${db.user}_PROXY"/>
        <property name="pa.proxyuser2" value="${db.user}_PROXY2"/>
        <antcall target="setup-proxy-authentication">
            <param name="PROXY_USER" value="${pa.proxyuser}"/>
            <param name="PROXY_USER2" value="${pa.proxyuser2}"/>
        </antcall>

        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.OracleJPATestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>

        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.OracleJPASpatialTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.spatial.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>

        <antcall target="oracle-proxy-test" inheritRefs="true"/>
    </target>

    <!-- Oracle proxy authentication needs to be setup for the tests. -->
    <target name="oracle-proxy-test">
        <antcall target="setup-proxy-authentication">
            <param name="DB_USER" value="PAS_CONN"/>
            <param name="DB_PWD" value="pas_conn"/>
            <param name="PROXY_USER" value="PAS_PROXY"/>
        </antcall>

        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.proxyauthentication.ProxyAuthenticationServerTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
            <param name="DB_USER" value="PAS_CONN"/>
            <param name="DB_PWD" value="pas_conn"/>
        </antcall>
    </target>

    <!-- Runs Remote (RMI) JPA tests. -->
    <target name="test-remote-jpa" depends="config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.remote.RemoteEntityManagerTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
    </target>

    <!-- Runs JPA Oracle NoSQL tests. -->
    <target name="oracle-nosql-test" depends="clean-test, config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.nosql.NoSQLTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.nosql.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.nosql.NoSQLMappedTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.oracle.nosql.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs SRG (EntityManagerJUnitTestSuite) with agent. -->
    <target name="test-srg" depends="clean-test,config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.EntityManagerJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>
    <!-- Runs SRG (EntityManagerJUnitTestSuite) with agent. -->
    <target name="test-srg21" depends="clean-test,config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.EntityManagerJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="jpa21.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>
    <!-- Runs SRG (EntityManagerJUnitTestSuite) with agent. -->
    <target name="test-srg22" depends="clean-test,config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.EntityManagerJUnitTestSuite"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="jpa22.run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs FullRegressionTestSuite with no agent. TEST_NO_WEAVING property informs tests that no weaving was done. -->
    <target name="test-no-weave" depends="clean-test,config-classpath">
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-DTEST_NO_WEAVING=true"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-DTEST_NO_WEAVING=true"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Runs FullRegressionTestSuite with static weaving. -->
    <target name="test-static-weave" depends="clean-test, config-classpath, run-weaver">
        <path id="run.classpath.static">
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.annotation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.ddl.generation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.only.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.merge.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.validation.failed.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.advanced.field.access.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.advanced.properties}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.pu.with.spaces}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-eclipselink-partitioned-model.jar"/>
            <pathelement path="${jpatest.basedir}/woven-eclipselink-plsql-model.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.cascade.deletes}.jar"/>
            <!--pathelement path="${jpatest.basedir}/woven-${eclipselink.pu.with.multibyte}.jar"/-->
            <pathelement path="${jpatest.basedir}/woven-${jpa.performance}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${jpa.performance2}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.metamodel.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.delimited.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.extensibility.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.beanvalidation.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.beanvalidation.dynamic.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-eclipselink-remote.jar"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.mapping.metadata.complete}.jar"/>
            <path refid="compile.path"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <path id="run.extended.classpath.static">
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.extended.model}.jar"/>
            <pathelement path="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_1}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_2}.jar"/>
            <pathelement path="${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_3}.jar"/>
            <pathelement path="${jdbc.driver.jar}"/>
            <pathelement path="${jpatest.basedir}/${classes.dir}"/>
            <pathelement path="${jpatest.basedir}/${jpatest.framework.jar}"/>
            <pathelement path="${jpatest.basedir}/${jpa.test.jar}"/>
            <path refid="compile.path"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-api.jar}"/>
            <pathelement path="${jpatest.2.common.plugins.dir}/${json-impl.jar}"/>
        </path>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.AllCMP3TestRunModel"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath.static"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsJUnitTestSuite"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
            <param name="TEST_WEAVING_OPTION" value="${test.weaving.option}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=eclipselink"/>
            <param name="RUN_PATH" value="run.extended.classpath.static"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Prompt runner test target, runs test.class from test.properties (default is LRG). -->
    <target name="test-prompt" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="${test.class}"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance2" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPA2PerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests, no cache. -->
    <target name="test-performance2-nocache" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPA2IsolatedPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs concurrency tests. -->
    <target name="test-concurrency" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAConcurrencyComparisonModel"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Tests concurrency inside the JEE server or cluster. -->
    <target name="server-test-concurrency">
        <antcall target="server-run-all-prompt" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="performance"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/performance"/>
            <param name="MODEL_NAME" value="jpa-performance"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/performance"/>
            <param name="TEST_NAME" value="jpa-performance"/>
            <param name="EAR_NAME" value="jpa-performance"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAClusteredConcurrencyComparisonModel"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <!-- Runs concurrency tests comparing with Hibernate. -->
    <target name="test-concurrency-hibernate" depends="clean-test,config-classpath">
        <path id="run.classpath.hibernate">
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.HibernateJPAConcurrencyComparisonModel"/>
            <param name="RUN_PATH" value="run.classpath.hibernate"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance-nocache" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAIsolatedPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance-nocache-emu" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAEmulatedIsolatedPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests. -->
    <target name="test-performance-emu" depends="clean-test,config-classpath">
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAEmulatedPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.performance.classpath"/>
            <param name="TEST_AGENT" value="${test.agent}"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with TopLink. -->
    <target name="test-performance-toplink" depends="clean-test,config-classpath">
        <path id="run.classpath.toplink">
            <pathelement path="${toplink.jar}"/>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.TopLinkJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.toplink"/>
            <param name="TEST_AGENT" value="-javaagent:../${toplink.jar}"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with TopLink Essentials. -->
    <target name="test-performance-essentials" depends="clean-test,config-classpath">
        <path id="run.classpath.essentials">
            <pathelement path="${toplink-essentials.jar}"/>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.EssentialsJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.essentials"/>
            <param name="TEST_AGENT" value="-javaagent:../${toplink-essentials-agent.jar}"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with Hibernate. -->
    <target name="test-performance-hibernate" depends="clean-test,config-classpath">
        <path id="run.classpath.hibernate">
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.HibernateJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.hibernate"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with Hibernate. -->
    <target name="test-performance2-hibernate" depends="clean-test,config-classpath">
        <path id="run.classpath.hibernate">
            <fileset dir="${hibernate.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.HibernateJPA2PerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.hibernate"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with OpenJPA. -->
    <target name="test-performance-openjpa" depends="clean-test,config-classpath">
        <path id="run.classpath.openjpa">
            <fileset dir="${openjpa.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.OpenJPAPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.openjpa"/>
            <param name="TEST_AGENT" value="-javaagent:../${openjpa.jar}"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Runs performance tests comparing with OpenJPA. -->
    <target name="test-performance-datanucleus" depends="clean-test,config-classpath">
        <path id="run.classpath.datanucleus">
            <fileset dir="${datanucleus.dir}">
                <include name="*.jar"/>
            </fileset>
            <path refid="run.performance.classpath"/>
        </path>
        <antcall target="run-test-prompt" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.performance.DataNucleusPerformanceRegressionModel"/>
            <param name="RUN_PATH" value="run.classpath.datanucleus"/>
            <param name="TEST_AGENT" value="-Dignore"/>
            <param name="TEST_WEAVING" value="-Dignore"/>
        </antcall>
    </target>

    <!-- Launches the testing browser -->
    <target name="test-browser" depends="config-classpath">
        <echo>Running test browser</echo>
        <mkdir dir="${jpatest.basedir}/${run.dir}"/>
        <mkdir dir="${jpatest.basedir}/${report.dir}"/>
        <!-- Can be set e.g. in test.properties to add VM options for a particular platform/driver  -->
        <property name="additional.jvmargs" value="-Ddummy2=dummy"/>
        <java classname="org.eclipse.persistence.testing.framework.ui.TestingBrowserFrame"
             fork="true"
             maxmemory="512m"
             failonerror="false"
             dir="${jpatest.basedir}/${run.dir}">
            <jvmarg value="${test.agent}"/>
            <jvmarg value="${test.weaving}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${db.url}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="-Ddb.platform=${db.platform}"/>
            <jvmarg line="${additional.jvmargs}"/>
            <classpath>
                <path refid="run.oracle.classpath"/>
            </classpath>
        </java>
    </target>

    <!-- Runs jpa srg test on Spring. -->
    <target name="test-spring-srg" depends="clean-test, config-classpath">
        <property name="is.spring" value="true"/>
        <antcall target="build" inheritRefs="true"/>
        <antcall target="run-spring-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.advanced.FAServerTestSuite"/>
            <param name="TEST_AGENT" value="-javaagent:${spring.jlib.dir}/spring-instrument-4.2.5.RELEASE.jar"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="run-spring-test" inheritRefs="true">
            <param name="TEST_CLASS" value="org.eclipse.persistence.testing.tests.jpa.advanced.AdvancedServerTestSuite"/>
            <param name="TEST_AGENT" value="-javaagent:${spring.jlib.dir}/spring-instrument-4.2.5.RELEASE.jar"/>
            <param name="TEST_WEAVING" value="${test.weaving}"/>
            <param name="ORM_TESTING" value="-Dorm.testing=jpa"/>
            <param name="RUN_PATH" value="run.classpath"/>
            <param name="DB_URL" value="${db.url}"/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
        <antcall target="clean" inheritRefs="true"/>
    </target>

    <!-- Generic target for running tests. -->
    <target name="run-test" depends="config-classpath">
        <echo>Running test on ${DB_URL}</echo>

        <condition property="jvmarg.db.platform.class" value="-Ddb.platform=${db.platform}">
            <isset property="db.platform"/>
        </condition>
        <condition property="jvmarg.db.platform.class" value="-Ddummy=dummy">
            <not>
                <isset property="db.platform"/>
            </not>
        </condition>

        <!-- default values for proxy test -->
        <property name="DB_USER" value="${db.user}"/>
        <property name="DB_PWD" value="${db.pwd}"/>
        <property name="pa.proxyuser" value="${db.user}_PROXY"/>
        <property name="pa.proxyuser2" value="${db.user}_PROXY2"/>

        <!-- Can be set e.g. in test.properties to add VM options for a particular platform/driver  -->
        <!--<property name="additional.jvmargs" value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8787"/>-->
        <property name="additional.jvmargs" value="-Ddummy2=dummy"/>

        <junit jvm="${test.junit.jvm.exec}" printsummary="yes" haltonfailure="${test.haltonfailure}" failureproperty="junit.failed" logfailedtests="true"
               fork="yes" forkmode="once" showoutput="true" maxmemory="${max.heap.memory}" dir="${run.dir}">
            <sysproperty key="proxy.user.name" value="PAS_PROXY"/>
            <sysproperty key="pa.connection.user" value="${db.user}"/>
            <sysproperty key="pa.connection.password" value="${db.pwd}"/>
            <sysproperty key="pa.proxyuser" value="${pa.proxyuser}"/>
            <sysproperty key="pa.proxyuser2" value="${pa.proxyuser2}"/>
            <sysproperty key="javax.xml.bind.JAXBContextFactory" value="org.eclipse.persistence.jaxb.JAXBContextFactory"/>
            <jvmarg line="${additional.jvmargs}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="${TEST_WEAVING_OPTION}"/>
            <jvmarg value="${ORM_TESTING}"/>
            <jvmarg value="-XX:CompileCommandFile=../../jdk_hotspot_compiler"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${DB_URL}"/>
            <jvmarg value="-Ddb.user=${DB_USER}"/>
            <jvmarg value="-Ddb.pwd=${DB_PWD}"/>
            <jvmarg value="${jvmarg.db.platform.class}"/>
            <classpath>
                <path refid="${RUN_PATH}"/>
            </classpath>
            <formatter type="xml"/>
            <test name="${TEST_CLASS}" haltonfailure="no" outfile="${report.dir}/${TEST_CLASS}-test-results">
            </test>
        </junit>

        <fail message="TESTS FAILED !">
            <condition>
                <and>
                    <isset property="junit.failed"/>
                    <istrue value="${test.fail.fast}"/>
                </and>
            </condition>
        </fail>
    </target>

    <!-- Generic target for running spring tests. -->
    <target name="run-spring-test" depends="config-classpath">
        <echo>Running test on ${DB_URL}</echo>

        <condition property="jvmarg.db.platform.class" value="-Ddb.platform=${db.platform}">
            <isset property="db.platform"/>
        </condition>
        <condition property="jvmarg.db.platform.class" value="-Ddummy=dummy">
            <not>
                <isset property="db.platform"/>
            </not>
        </condition>
        <!-- Can be set e.g. in test.properties to add VM options for a particular platform/driver  -->
        <property name="additional.jvmargs" value="-Ddummy2=dummy"/>

        <junit printsummary="yes" haltonfailure="yes" fork="yes" forkmode="once" showoutput="true" maxmemory="512m" dir="${run.dir}">
            <sysproperty key="TEST_SERVER_PLATFORM" value="org.eclipse.persistence.testing.framework.server.SpringPlatform"/>
            <sysproperty key="proxy.user.name" value="${oracle.proxy.user}"/>
            <sysproperty key="run.metadata.cache.test.suite" value="${run.metadata.cache.test.suite}"/>
            <jvmarg line="${additional.jvmargs}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="${ORM_TESTING}"/>
            <jvmarg value="-XX:CompileCommandFile=../../jdk_hotspot_compiler"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${DB_URL}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="${jvmarg.db.platform.class}"/>
            <classpath>
                <path refid="${RUN_PATH}"/>
                <path refid="spring.path"/>
            </classpath>
            <formatter type="xml"/>
            <test name="${TEST_CLASS}" haltonfailure="no" outfile="${report.dir}/${TEST_CLASS}-test-results">
            </test>
        </junit>
    </target>

    <target name="generate-report">
        <junitreport todir="${jpatest.basedir}/${report.dir}">
            <fileset dir="${jpatest.basedir}/${report.dir}">
                <include name="*test-results.xml"/>
            </fileset>
            <report format="noframes" todir="${jpatest.basedir}/${report.dir}"/>
        </junitreport>
    </target>

    <!-- Runs the test using the PromptTestRunner -->
    <target name="run-test-prompt" depends="config-classpath">
        <condition property="jvmarg.performance.baseline.version" value="-Dtoplink.loadbuild.baseline-version=${performance.baseline.version}">
            <isset property="performance.baseline.version"/>
        </condition>
        <condition property="jvmarg.performance.baseline.version" value="-Ddummy=dummy">
            <not>
                <isset property="performance.baseline.version"/>
            </not>
        </condition>
        <!-- Can be set e.g. in test.properties to add VM options for a particular platform/driver  -->
        <property name="additional.jvmargs" value="-Ddummy2=dummy"/>

        <echo>Running test on ${db.url}</echo>
        <java classname="org.eclipse.persistence.testing.framework.PromptTestRunner"
             fork="true"
             maxmemory="${max.heap.memory}"
             failonerror="false"
             dir="${run.dir}">
            <jvmarg line="${additional.jvmargs}"/>
            <jvmarg value="${jvmarg.performance.baseline.version}"/>
            <jvmarg value="${TEST_AGENT}"/>
            <jvmarg value="${TEST_WEAVING}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${db.url}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="-Ddb.platform=${db.platform}"/>
            <arg value="testmodel=${TEST_CLASS}"/>
            <arg value="regressionlog=../${report.dir}/test.log"/>
            <arg value="saveresults=${should.save.results}" />
            <classpath>
                <path refid="${RUN_PATH}"/>
            </classpath>
        </java>
    </target>

    <!-- Runs EclipseLink static weaving ant task on test jars. -->
    <target name="run-weaver">
        <!-- define weaving ant task-->
        <taskdef name="weave" classname="org.eclipse.persistence.tools.weaving.jpa.StaticWeaveAntTask">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </taskdef>
        <!-- process the weaving function-->
        <weave source= "${jpatest.basedir}/${eclipselink.annotation.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.ddl.generation.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.ddl.generation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.xml.only.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.xml.only.model}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
                    <pathelement path="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
               </classpath>
        </weave>
        <!-- weave source="${jpatest.basedir}/${eclipselink.jpa21.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.jpa21.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.jpa21.classpath"/>
               </classpath>
        </weave-->
        <weave source="${jpatest.basedir}/${eclipselink.xml.extended.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.xml.extended.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.xml.merge.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.xml.merge.model}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.annotation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
                    <pathelement path="${jpatest.basedir}/${eclipselink.annotation.model}.jar"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.validation.failed.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.validation.failed.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.advanced.field.access.model}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.advanced.field.access.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.advanced.properties}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.advanced.properties}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.pu.with.spaces}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.pu.with.spaces}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/eclipselink-partitioned-model.jar"
               target="${jpatest.basedir}/woven-eclipselink-partitioned-model.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/eclipselink-plsql-model.jar"
               target="${jpatest.basedir}/woven-eclipselink-plsql-model.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source="${jpatest.basedir}/${eclipselink.cascade.deletes}.jar"
               target="${jpatest.basedir}/woven-${eclipselink.cascade.deletes}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <!--weave source= "${jpatest.basedir}/${eclipselink.pu.with.multibyte}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.pu.with.multibyte}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave-->
        <weave source= "${jpatest.basedir}/${jpa.performance}.jar"
               target = "${jpatest.basedir}/woven-${jpa.performance}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.metamodel.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.metamodel.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.delimited.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.delimited.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
         <weave source= "${jpatest.basedir}/${eclipselink.extensibility.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.extensibility.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.beanvalidation.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.beanvalidation.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.beanvalidation.dynamic.model}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.beanvalidation.dynamic.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.composite.advanced.model.member_1}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_1}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.composite.advanced.model.member_2}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_2}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.composite.advanced.model.member_3}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.composite.advanced.model.member_3}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <!-- ${eclipselink.xml.composite.advanced.model.member_1}.jar may be used as a standalone persistence unit: -->
        <!-- it does not specify <property name="eclipselink.composite-unit.member" value="true"/> in its persistence.xml -->
        <!-- Therefore no persistenceinfo to its composite is required -->
        <weave source= "${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_1}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_1}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_2}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_2}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.xml.composite.advanced.model.member_3}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.composite.advanced.model.member_3}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.xml.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
        <!-- ${eclipselink.xml.extended.composite.advanced.model.member_1}.jar may be used as a standalone persistence unit: -->
        <!-- it does not specify <property name="eclipselink.composite-unit.member" value="true"/> in its persistence.xml -->
        <!-- Therefore no persistenceinfo to its composite is required -->
        <weave source= "${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_1}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_1}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_2}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_2}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model.member_3}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.extended.composite.advanced.model.member_3}.jar"
               persistenceinfo="${jpatest.basedir}/${eclipselink.xml.extended.composite.advanced.model}.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>
        <weave source= "${jpatest.basedir}/eclipselink-remote.jar"
               target = "${jpatest.basedir}/woven-eclipselink-remote.jar"
               persistenceinfo="${jpatest.basedir}/eclipselink-remote.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.extended.classpath"/>
               </classpath>
        </weave>

        <weave source= "${jpatest.basedir}/${eclipselink.xml.mapping.metadata.complete}.jar"
               target = "${jpatest.basedir}/woven-${eclipselink.xml.mapping.metadata.complete}.jar"
               loglevel="${logging.level}">
               <classpath>
                   <path refid="run.classpath"/>
               </classpath>
        </weave>
    </target>

    <target name="run-weaver-server-test">
        <!-- define weaving ant task-->
        <taskdef name="weave" classname="org.eclipse.persistence.tools.weaving.jpa.StaticWeaveAntTask">
            <classpath>
                <path refid="compile.path"/>
            </classpath>
        </taskdef>
        <!-- process the weaving function-->
        <weave source="${jpatest.basedir}/build/unwoven-${MODEL_NAME}_ejb.jar"
               target="${jpatest.basedir}/build/${MODEL_NAME}_ejb.jar"
               loglevel="${logging.level}">
               <classpath>
                    <path refid="run.classpath"/>
               </classpath>
        </weave>
    </target>

    <!-- Server Testing -->
    <target name="server-install">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-install" inheritRefs="true"/>
    </target>

    <target name="server-setup" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-setup" inheritRefs="true"/>
    </target>

    <target name="server-reset">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-reset" inheritRefs="true"/>
    </target>

    <target name="server-start" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-start" inheritRefs="true"/>
    </target>

    <target name="server-stop" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-stop" inheritRefs="true"/>
    </target>

    <target name="server-restart" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-stop" inheritRefs="true"/>
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-start" inheritRefs="true"/>
    </target>

    <target name="server-deploy" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-deploy" inheritRefs="true">
            <property name="ear.name" value="${ear.name}"/>
            <property name="application.name" value="${application.name}"/>
        </ant>
    </target>

    <target name="server-undeploy" depends="detect-os">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-undeploy" inheritRefs="true">
            <property name="application.name" value="${application.name}"/>
        </ant>
    </target>

    <target name="prepare-server-sessionbeans">
        <copy file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_original"/>
        <replace file="${jpatest.basedir}/${src.dir}/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java" token='@puName@' value="${PERSISTENCE_UNIT_NAME}"/>
        <antcall target="prepare-multiple-persistence-units-sessionbeans" inheritRefs="true"/>
    </target>

    <target name="prepare-multiple-persistence-units-sessionbeans" if="USE_MULTIPLE_PERSISTENCE_UNITS">
        <delete failonerror="false">
            <fileset dir="${src.dir}/org/eclipse/persistence/testing/framework/server" includes="TestRunner1B*.java,TestRunner2B*.java,TestRunner3B*.java,TestRunner4B*.java,TestRunner5B*.java,TestRunner6B*.java"/>
        </delete>
        <condition property="pusb.includes" value="TestRunner*.java" else="TestRunner1*.java,TestRunner2*.java,TestRunner3*.java,TestRunner4*.java,TestRunner5*.java">
            <contains string="${PERSISTENCE_UNIT_NAME}" substring="jpa21-sessionbean"/>
        </condition>
        <copy todir="${jpatest.basedir}/${src.dir}/org/eclipse/persistence/testing/framework/server" overwrite="true">
            <fileset dir="${jpatest.basedir}/${resource.dir}/server" includes="${pusb.includes}"/>
        </copy>
    </target>

    <target name="recover-server-sessionbeans" depends="server-original-sessionbean-existence" if="original.sessionbean.exists">
        <move file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_original" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java" overwrite="true"/>
        <antcall target="remove-multiple-persistence-units-sessionbeans" inheritRefs="true"/>
    </target>

    <target name="server-original-sessionbean-existence">
        <available file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_original" property="original.sessionbean.exists" value="true" />
    </target>

    <target name="remove-multiple-persistence-units-sessionbeans" if="USE_MULTIPLE_PERSISTENCE_UNITS">
        <delete>
            <fileset dir="${jpatest.basedir}/${src.dir}/org/eclipse/persistence/testing/framework/server"
            includes="TestRunner1Bean.java
                      TestRunner2Bean*.java
                      TestRunner3Bean*.java
                      TestRunner4Bean*.java
                      TestRunner5Bean*.java
                      TestRunner6Bean*.java"/>
        </delete>
    </target>

    <target name="server-build-jpa20-client-jar" depends="config-classpath">
        <antcall target="server-build-client-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.server.path"/>
        </antcall>
    </target>

    <target name="server-build-jpa21-client-jar" depends="config-classpath">
        <antcall target="server-build-client-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.jpa21.server.path"/>
        </antcall>
    </target>

    <target name="server-build-jpa22-client-jar" depends="config-classpath">
        <antcall target="server-build-client-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.jpa22.server.path"/>
        </antcall>
    </target>

    <target name="server-build-jpa20-ejb-jar" depends="config-classpath">
        <antcall target="server-build-ejb-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.server.path"/>
        </antcall>
    </target>

    <target name="server-build-jpa21-ejb-jar" depends="config-classpath">
        <antcall target="server-build-ejb-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.jpa21.server.path"/>
        </antcall>
    </target>

    <target name="server-build-jpa22-ejb-jar" depends="config-classpath">
        <antcall target="server-build-ejb-jar" inheritRefs="true">
            <param name="COMPILE_PATH" value="compile.jpa22.server.path"/>
        </antcall>
    </target>

    <!-- Build server test client jar. -->
    <target name="server-build-client-jar" depends="config-classpath">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${jpatest.basedir}/${server.name}.properties"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/META-INF"/>
        <mkdir dir="${jpatest.basedir}/stage/META-INF"/>
        <javac
            srcdir="${jpatest.basedir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="org/eclipse/persistence/testing/framework/**">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="${TEST_DIR}/**/*.java"
            excludes="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java,
                      org/eclipse/persistence/testing/tests/jpa/criteria/JUnitCriteriaMetamodelTestSuite.java">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <javac
            srcdir="${jpatest.2.coretest.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="org/eclipse/persistence/testing/framework/junit/**">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <copy file="${jpatest.basedir}/resource/server/application-client.xml" todir="stage/META-INF"/>
        <copy todir="stage">
            <fileset dir="${jpatest.basedir}/" includes="*.properties"/>
        </copy>
        <filter token="server.user" value="${server.user}"/>
        <filter token="server.pwd" value="${server.pwd}"/>
        <filter token="server.factory" value="${server.factory}"/>
        <copy file="${jpatest.basedir}/resource/server/jndi.properties" todir="stage" filtering="true"/>
        <jar destfile="${jpatest.basedir}/${build.dir}/${TEST_NAME}_client.jar" basedir="stage"/>
        <delete dir="stage"/>
    </target>

    <!-- Build server test ejb jar. -->
    <target name="server-build-ejb-jar" depends="config-classpath, check-model-name">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${jpatest.basedir}/${server.name}.properties"/>
        <mkdir dir="${jpatest.basedir}/stage/META-INF"/>
        <!-- Compile server test framework and test model classes. -->
        <javac
            srcdir="${jpatest.basedir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="org/eclipse/persistence/testing/framework/**">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="${TEST_DIR}/**/*.java"
            excludes="org/eclipse/persistence/testing/tests/jpa/criteria/CriteriaServerTestSuite.java,
                      org/eclipse/persistence/testing/tests/jpa/criteria/JUnitCriteriaMetamodelTestSuite.java">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <javac
            srcdir="${jpatest.2.coretest.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="org/eclipse/persistence/testing/framework/**,
                org/eclipse/persistence/testing/tests/performance/emulateddb/**,
                org/eclipse/persistence/tools/**,
                org/eclipse/persistence/testing/tests/TestRunModel.java">
            <classpath refid="compile.server.path"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="${MODEL_DIR}/**/*.java">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>
        <javac
            srcdir="${eclipselink.jpa.test.dir}/${src.dir}"
            destdir="${jpatest.basedir}/stage"
            debug="${javac.debug}"
            debuglevel="${javac.debuglevel}"
            encoding="UTF-8"
            optimize="${javac.optimize}"
            source="${javac.version}"
            target="${javac.version}"
            deprecation="${javac.deprecation}"
            failonerror="false"
            includes="${MODEL_DIR2}/*.java">
            <classpath refid="${COMPILE_PATH}"/>
        </javac>

        <copy todir="${jpatest.basedir}/stage/META-INF">
            <fileset dir="${jpatest.basedir}/resource/server">
                <include name="persistence.xml"/>
            </fileset>
        </copy>
        <copy todir="${jpatest.basedir}/stage/META-INF">
            <fileset dir="${jpatest.basedir}/resource/server/">
                <include name="ejb-jar.xml"/>
            </fileset>
        </copy>

        <!--SessionBean Test need it's own ejb-jar.xml, which including ejb-def for the sessionbean -->
        <!--DDLGeneration Test need it's own persistence.xml and mapping xml files -->
        <copy todir="${jpatest.basedir}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${MODEL_NAME}/server/">
                <include name="*.xml"/>
                <exclude name="extension*.xml"/>
            </fileset>
        </copy>

        <!--Empty ejb-jar.xml is needed for GlassFish when run jpa tests against NonJTA datasource-->
        <antcall target="overwrite-ejb-jar-xml-with-emptyone" inheritRefs="true"/>

        <copy todir="${jpatest.basedir}/stage/" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${MODEL_NAME}/server/">
                <include name="extension*.*"/>
            </fileset>
        </copy>

        <copy todir="${jpatest.basedir}/stage/org" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${MODEL_NAME}/org/">
                <include name="**"/>
            </fileset>
        </copy>

        <copy todir="${jpatest.basedir}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${MODEL_NAME}/server/">
                <include name="*.jdbc"/>
            </fileset>
        </copy>

        <copy todir="${jpatest.basedir}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${MODEL_NAME2}/server/">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <replace dir="${jpatest.basedir}/stage/META-INF" token='@server-platform-class@' value="${server.platform.class}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@server-platform@' value="${server.platform}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@default@' value="${PERSISTENCE_UNIT_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@session-data-source-name@' value="${SESSION_DS_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@server-weaving@' value="${server.weaving}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@database-platform@' value="${db.platform}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@database2-platform@' value="${db2.platform}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@database3-platform@' value="${db3.platform}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@dbUser@' value="${db.user}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@proxyUser@' value="${oracle.proxy.user}">
            <include name="*.xml"/>
        </replace>
        <!-- Replace datasource type, name and transaction type -->
        <antcall target="replace-datasource-type" inheritRefs="true"/>
        <antcall target="add-project-cache-properties" inheritRefs="true"/>
        <!-- Copy the canonical metamodel and criteria api test -->
        <antcall target="copy-criteria-api-canonical-model" inheritRefs="true"/>
        <!-- Create ejb jar. -->
        <antcall target="create-ejb-jar" inheritRefs="true"/>
        <antcall target="create-ejb-stubs" inheritRefs="true"/>
        <delete dir="stage"/>
    </target>

    <target name="overwrite-ejb-jar-xml-with-emptyone" if="is.glassfish.nonjta.datasource">
        <copy todir="${jpatest.basedir}/stage/META-INF" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/${server.name}">
                <include name="ejb-jar.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="prepare-non-jta-ds-servertest" depends="cleanup-non-jta-ds-servertest" if="is.nonjta.datasource">
        <move file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_jtaDS"/>
        <move file="src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_nonjtaDS" tofile="src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java"/>
    </target>

    <target name="jta-ds-servertest-existence">
        <available file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_jtaDS" property="jta-ds-servertest.exists" value="true" />
    </target>

    <target name="cleanup-non-jta-ds-servertest" depends="jta-ds-servertest-existence" if="jta-ds-servertest.exists">
        <move file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_nonjtaDS"/>
        <move file="src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java_jtaDS" tofile="src/org/eclipse/persistence/testing/framework/server/TestRunnerBean.java"/>
    </target>

    <target name="replace-datasource-type" depends="replace-jta-datasource,replace-nonjta-datasource"/>

    <target name="replace-jta-datasource" unless="is.nonjta.datasource">
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source-name@' value="${DS_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source2-name@' value="${DS2_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source3-name@' value="${DS3_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@transaction-type@' value="JTA">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@datasource-type@' value="jta-data-source">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@NONJTA_DS_NAME@' value="${NONJTA_DS_NAME}">
            <include name="*.xml"/>
        </replace>
    </target>

    <!-- Modify stage/META-INF/persistence.xml to add persistence properties for Metadata Cache -->
    <target name="add-project-cache-properties" if="use.project.cache">
        <echo message="basedir is ${basedir}"/>
        <replaceregexp file="${jpatest.basedir}/stage/META-INF/persistence.xml"
            match='&#60;/properties&#62;'
            replace='&#60;property name="eclipselink.project-cache" value="java-serialization"/&#62;&#10;&#60;property name="eclipselink.project-cache.java-serialization.file-location" value="${basedir}&#47;${projectcache.dir}&#47;${EAR_NAME}&#47;MetadataCachingTestProject.file"/&#62;&#10;&#60;/properties&#62;&#10;'
            flags="s"
            byline="true"/>
    </target>

    <!-- Save project cache file MetadataCachingTestProject.file to ${jpatest.basedir}/pcfile/${EAR_NAME}, the file will be used in static weave and runtime in the second run of Metadata Cache Testing -->
    <target name="store-project-cache-file" if="run.metadata.cache.test.suite">
        <delete dir="${jpatest.basedir}/${projectcache.dir}/${EAR_NAME}"/>
        <mkdir dir="${jpatest.basedir}/${projectcache.dir}/${EAR_NAME}"/>
        <move file="${glassfish.home}/domains/domain1/config/MetadataCachingTestProject.file" todir="${jpatest.basedir}/${projectcache.dir}/${EAR_NAME}" overwrite="true"/>
    </target>

    <target name="replace-nonjta-datasource" if="is.nonjta.datasource">
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source-name@' value="${NONJTA_DS_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source2-name@' value="${NONJTA_DS2_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@data-source3-name@' value="${NONJTA_DS3_NAME}">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@transaction-type@' value="RESOURCE_LOCAL">
            <include name="*.xml"/>
        </replace>
        <replace dir="${jpatest.basedir}/stage/META-INF" token='@datasource-type@' value="non-jta-data-source">
            <include name="*.xml"/>
        </replace>
    </target>

    <target name="create-ejb-jar" depends="create-ejb-jar-without-static-weaving,create-ejb-jar-with-static-weaving"/>

    <target name="create-ejb-jar-without-static-weaving" unless="is.static.server.weaving">
        <antcall target="remove-composite-classes"/>
        <jar destfile="${jpatest.basedir}/${build.dir}/${MODEL_NAME}_ejb.jar" basedir="stage"/>
    </target>
    <target name="create-ejb-jar-with-static-weaving" if="is.static.server.weaving">
        <antcall target="remove-composite-classes"/>
        <jar destfile="${jpatest.basedir}/${build.dir}/unwoven-${MODEL_NAME}_ejb.jar" basedir="stage"/>
        <antcall target="run-weaver-server-test" inheritRefs="true">
            <param name="MODEL_NAME" value="${MODEL_NAME}"/>
        </antcall>
    </target>
    <target name="check-model-name">
        <condition property="run.jpa.composite.advanced">
            <equals arg1="${MODEL_NAME}" arg2="eclipselink-composite-advanced-model" />
        </condition>
        <condition property="run.jpa.composite.advanced.member1">
            <equals arg1="${MODEL_NAME}" arg2="eclipselink-composite-advanced-model-member_1" />
        </condition>
        <condition property="run.jpa.composite.advanced.member2">
            <equals arg1="${MODEL_NAME}" arg2="eclipselink-composite-advanced-model-member_2" />
        </condition>
        <condition property="run.jpa.composite.advanced.member3">
            <equals arg1="${MODEL_NAME}" arg2="eclipselink-composite-advanced-model-member_3" />
        </condition>
        <condition property="run.jpa.xmltest.or.xml.extended.or.not.composite.advanced">
            <or>
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-servertest-model" />
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-composite-advanced-model" />
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-extended-composite-advanced-model" />
            </or>
        </condition>
        <condition property="run.jpa.xml.extended.or.not.composite.advanced.member1">
            <or>
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-composite-advanced-model-member_1" />
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-extended-composite-advanced-model-member_1" />
            </or>
        </condition>
        <condition property="run.jpa.xml.extended.or.not.composite.advanced.member2">
            <or>
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-composite-advanced-model-member_2" />
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-extended-composite-advanced-model-member_2" />
            </or>
        </condition>
        <condition property="run.jpa.xml.extended.or.not.composite.advanced.member3">
            <or>
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-composite-advanced-model-member_3" />
                <equals arg1="${MODEL_NAME}" arg2="eclipselink-xml-extended-composite-advanced-model-member_3" />
            </or>
        </condition>
    </target>

    <target name="remove-composite-classes">
        <antcall target="remove-composite-memeber-classes"/>
        <antcall target="remove-composite-memeber23-classes"/>
        <antcall target="remove-composite-memeber13-classes"/>
        <antcall target="remove-composite-memeber12-classes"/>
        <antcall target="remove-xml-composite-memeber-classes"/>
        <antcall target="remove-xml-composite-memeber23-classes"/>
        <antcall target="remove-xml-composite-memeber13-classes"/>
        <antcall target="remove-xml-composite-memeber12-classes"/>
    </target>

    <target name="remove-composite-advanced-main-classes">
        <delete>
            <fileset dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced" includes="*.class"/>
        </delete>
    </target>

    <target name="remove-xml-composite-advanced-main-classes">
        <delete>
            <fileset dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced" includes="*.class"/>
        </delete>
    </target>

    <target name="remove-composite-memeber-classes" if="run.jpa.composite.advanced">
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_2"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_3"/>
    </target>

    <target name="remove-composite-memeber23-classes" if="run.jpa.composite.advanced.member1">
        <antcall target="remove-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_2"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_3"/>
    </target>

    <target name="remove-composite-memeber13-classes" if="run.jpa.composite.advanced.member2">
        <antcall target="remove-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_3"/>
    </target>

    <target name="remove-composite-memeber12-classes" if="run.jpa.composite.advanced.member3">
        <antcall target="remove-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/composite/advanced/member_2"/>
    </target>

    <target name="remove-xml-composite-memeber-classes" if="run.jpa.xmltest.or.xml.extended.or.not.composite.advanced">
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3"/>
    </target>

    <target name="remove-xml-composite-memeber23-classes" if="run.jpa.xml.extended.or.not.composite.advanced.member1">
        <antcall target="remove-xml-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3"/>
    </target>

    <target name="remove-xml-composite-memeber13-classes" if="run.jpa.xml.extended.or.not.composite.advanced.member2">
        <antcall target="remove-xml-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3"/>
    </target>

    <target name="remove-xml-composite-memeber12-classes" if="run.jpa.xml.extended.or.not.composite.advanced.member3">
        <antcall target="remove-xml-composite-advanced-main-classes"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1"/>
        <delete dir="stage/org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2"/>
    </target>

    <target name="copy-criteria-api-canonical-model" if="is.criteria.server.test">
        <!-- Coping the CriteriaServerTestSuite class -->
        <antcall target="compile"/>
        <copy todir="${jpatest.basedir}/stage">
            <fileset dir="${jpatest.basedir}/classes">
                <include name="org/eclipse/persistence/testing/tests/jpa/criteria/*.class"/>
                <include name="org/eclipse/persistence/testing/models/jpa/advanced/*.class"/>
                <include name="org/eclipse/persistence/testing/models/jpa/inheritance/*.class"/>
                <include name="org/eclipse/persistence/testing/models/jpa/inheritance/listeners/*.class"/>
                <include name="org/eclipse/persistence/testing/models/jpa/inherited/*.class"/>
            </fileset>
        </copy>
    </target>

    <target name="create-ejb-stubs" depends="detect-os" if="is.websphere">
        <exec executable="${was.home}/bin/createEJBStubs.${suffix}">
            <arg line="${jpatest.basedir}/${build.dir}/${MODEL_NAME}_ejb.jar"/>
        </exec>
    </target>

    <!-- Build server test ear file specific to grid -->
    <target name="server-build-ear-grid" if="is.grid.testing" depends="set-server-properties">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <copy overwrite="true" file="./resource/${MODEL_NAME}/server/grid/weblogic-application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token="@modelname@" value="${MODEL_NAME}">
            <include name="*.xml"/>
        </replace>
        <copy overwrite="true" file="./resource/${MODEL_NAME}/server/grid/grid.gar" todir="${build.dir}"/>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}" includes="${MODEL_NAME}_ejb.jar, grid.gar, META-INF/weblogic-application.xml"/>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>
    <!-- Build server test ear file specific to kryo or jgroups -->
    <target name="server-build-ear-kryo" if="is.kryo.testing" depends="set-server-properties">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <copy overwrite="true" file="../../../extension.lib.external/kryo-all.jar" todir="${build.dir}/APP-INF/lib"/>
        <copy overwrite="true" file="../../../extension.lib.external/jgroups.jar" todir="${build.dir}/APP-INF/lib"/>
        <copy overwrite="true" file="../../../extension.oracle.lib.external/toplink-exalogic.jar" todir="${build.dir}/APP-INF/lib"/>
        <copy overwrite="true" todir="${build.dir}/APP-INF/lib">
            <fileset dir="${jpatest.2.common.plugins.dir}" includes="org.eclipse.persistence.extension_*.jar"/>
        </copy>
        <copy overwrite="true" file="./resource/${MODEL_NAME}/server/kryo/META-INF/weblogic-application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token="@modelname@" value="${MODEL_NAME}">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}">
                <include name="META-INF/weblogic-application.xml"/>
                <include name="${MODEL_NAME}_ejb.jar"/>
                <include name="**/APP-INF/lib/*.jar"/>
            </fileset>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>
    <!-- Build server test ear file specific to JPA-RS -->
    <target name="server-build-ear-jpars" if="is.jpars.testing" depends="set-server-properties">
        <ant antfile="antbuild.xml" dir="${jpatest.basedir}/../eclipselink.jpars.test"  target="create-jpars-war-file"/>
        <copy overwrite="true" file="./resource/${MODEL_NAME}/server/application.xml" todir="${build.dir}/META-INF"/>
        <copy file="${jpatest.basedir}/../eclipselink.jpars.test/eclipselink.jpars.test.war" todir="${jpatest.basedir}/${build.dir}"/>
        <antcall target="replace-jpars-jar-with-toplink-dataservices-web-jar"/>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}" includes ="eclipselink.jpars.test.war"/>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>
    <!-- replace org.eclipse.persistence.jpars*.jar with toplink-dataservices-web.jar in generated eclipselink.jpars.test.war -->
    <target name="replace-jpars-jar-with-toplink-dataservices-web-jar" if="test.jpars.on.toplink.dataservices">
        <unzip src="${jpatest.basedir}/${build.dir}/eclipselink.jpars.test.war" dest="${jpatest.basedir}/${build.dir}"/>
        <delete dir="${jpatest.basedir}/${build.dir}/WEB-INF/lib"/>
        <mkdir dir="${jpatest.basedir}/${build.dir}/WEB-INF/lib"/>
        <copy file="/ade_autofs/ade_generic/TOPLINK_12.1.2.0.0_GENERIC.rdd/LATEST/tldev/jlib/tl/toplink-dataservices-web.jar" todir="${jpatest.basedir}/${build.dir}/WEB-INF/lib"/>
        <zip destfile="${jpatest.basedir}/${build.dir}/eclipselink.jpars.test.war" basedir="${jpatest.basedir}/${build.dir}"
        includes="META-INF/MANIFEST.MF, WEB-INF/**"/>
    </target>
    <!-- Build server test ear. -->
    <target name="server-build-ear" unless="is.jpars.testing" depends="set-server-properties">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token='@modelname@' value="${MODEL_NAME}">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}">
                <include name="${MODEL_NAME}_ejb.jar"/>
            </fileset>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>

    <!-- Build the client jar, ejb jar, and ear. -->
    <target name="server-build" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa20-client-jar,server-build-jpa20-ejb-jar,server-build-ear,server-build-ear-jpars,server-build-ear-grid,server-build-ear-kryo"/>

    <target name="server-build-jpa21" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa21-client-jar,server-build-jpa21-ejb-jar,server-build-ear,server-build-ear-jpars"/>

    <target name="server-build-jpa22" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa22-client-jar,server-build-jpa22-ejb-jar,server-build-ear,server-build-ear-jpars"/>

    <target name="server-build-composite-advanced" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa20-client-jar,server-build-ejb-composite-advanced-jar,server-build-composite-advanced-ear"/>

    <target name="server-build-xml-composite-advanced" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa20-client-jar,server-build-ejb-xml-composite-advanced-jar,server-build-xml-composite-advanced-ear"/>

    <target name="server-build-xml-extended-composite-advanced" depends="prepare-non-jta-ds-servertest,prepare-server-sessionbeans,server-build-jpa20-client-jar,server-build-ejb-xml-extended-composite-advanced-jar,server-build-xml-extended-composite-advanced-ear"/>

    <target name="server-build-ejb-composite-advanced-jar">
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/composite/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-composite-advanced-model"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_1"/>
            <param name="MODEL_NAME" value="eclipselink-composite-advanced-model-member_1"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_2"/>
            <param name="MODEL_NAME" value="eclipselink-composite-advanced-model-member_2"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/composite/advanced/member_3"/>
            <param name="MODEL_NAME" value="eclipselink-composite-advanced-model-member_3"/>
        </antcall>
    </target>

    <target name="server-build-composite-advanced-ear">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token='@modelname@' value="eclipselink-composite-advanced-model">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}"
               includes ="eclipselink-composite-advanced-model_ejb.jar,
                   eclipselink-composite-advanced-model-member_1_ejb.jar,
                   eclipselink-composite-advanced-model-member_2_ejb.jar,
                   eclipselink-composite-advanced-model-member_3_ejb.jar"/>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>

    <target name="server-build-ejb-xml-composite-advanced-jar">
        <copyfile src="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_1/orm.xml" dest="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_1/server/orm.xml" forceoverwrite="true"/>

        <copyfile src="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_2/orm.xml" dest="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_2/server/orm.xml" forceoverwrite="true"/>

        <copyfile src="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_3/orm.xml" dest="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_3/server/orm.xml" forceoverwrite="true"/>

        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-xml-composite-advanced-model"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1"/>
            <param name="MODEL_NAME" value="eclipselink-xml-composite-advanced-model-member_1"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2"/>
            <param name="MODEL_NAME" value="eclipselink-xml-composite-advanced-model-member_2"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3"/>
            <param name="MODEL_NAME" value="eclipselink-xml-composite-advanced-model-member_3"/>
        </antcall>

        <delete file="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_1/server/orm.xml" failonerror="false"/>
        <delete file="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_2/server/orm.xml" failonerror="false"/>
        <delete file="${jpatest.basedir}/resource/eclipselink-xml-composite-advanced-model-member_3/server/orm.xml" failonerror="false"/>
    </target>

    <target name="server-build-xml-composite-advanced-ear">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token='@modelname@' value="eclipselink-xml-composite-advanced-model">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}"
               includes ="eclipselink-xml-composite-advanced-model_ejb.jar,
                   eclipselink-xml-composite-advanced-model-member_1_ejb.jar,
                   eclipselink-xml-composite-advanced-model-member_2_ejb.jar,
                   eclipselink-xml-composite-advanced-model-member_3_ejb.jar"/>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>

    <target name="server-build-ejb-xml-extended-composite-advanced-jar">
        <copy todir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_1/server" overwrite="true" failonerror="false">
           <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/eclipselink-xml-extended-composite-advanced-model-member_1/" includes="eclipselink-orm.xml, advanced-extended-entity-mappings_1.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_2/server" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/eclipselink-xml-extended-composite-advanced-model-member_2/" includes="eclipselink-orm.xml, advanced-extended-entity-mappings_2.xml"/>
        </copy>
        <copy todir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_3/server" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/eclipselinkorm/eclipselink-xml-extended-composite-advanced-model-member_3/" includes="eclipselink-orm.xml, advanced-extended-entity-mappings_3.xml"/>
        </copy>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-xml-extended-composite-advanced-model"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_1"/>
            <param name="MODEL_NAME" value="eclipselink-xml-extended-composite-advanced-model-member_1"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_2"/>
            <param name="MODEL_NAME" value="eclipselink-xml-extended-composite-advanced-model-member_2"/>
        </antcall>
        <antcall target="server-build-jpa20-ejb-jar" inheritRefs="true">
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/composite/advanced/member_3"/>
            <param name="MODEL_NAME" value="eclipselink-xml-extended-composite-advanced-model-member_3"/>
        </antcall>
        <delete>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_1/server/"
                includes="eclipselink-orm.xml, advanced-extended-entity-mappings_1.xml"/>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_2/server/"
                includes="eclipselink-orm.xml, advanced-extended-entity-mappings_2.xml"/>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-xml-extended-composite-advanced-model-member_3/server/"
                includes="eclipselink-orm.xml,advanced-extended-entity-mappings_3.xml"/>
        </delete>
    </target>

    <target name="server-build-xml-extended-composite-advanced-ear">
        <copy overwrite="true" file="./resource/server/application.xml" todir="${build.dir}/META-INF"/>
        <replace dir="${build.dir}/META-INF" token='@modelname@' value="eclipselink-xml-extended-composite-advanced-model">
            <include name="*.xml"/>
        </replace>
        <ear destfile="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" appxml="${build.dir}/META-INF/application.xml">
            <fileset dir="${jpatest.basedir}/${build.dir}"
               includes ="eclipselink-xml-extended-composite-advanced-model_ejb.jar,
                   eclipselink-xml-extended-composite-advanced-model-member_1_ejb.jar,
                   eclipselink-xml-extended-composite-advanced-model-member_2_ejb.jar,
                   eclipselink-xml-extended-composite-advanced-model-member_3_ejb.jar"/>
        </ear>
        <copy file="${jpatest.basedir}/${build.dir}/${EAR_NAME}.ear" todir="."/>
    </target>
    <!-- Build, deploy and run a test suite on the server. -->
    <target name="server-run-all" depends="detect-os,set-server-properties">
        <antcall target="server-build" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-run-all-jpa21" depends="detect-os,set-server-properties">
        <antcall target="server-build-jpa21" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-run-all-jpa22" depends="detect-os,set-server-properties">
        <antcall target="server-build-jpa22" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-run-all-composite-advanced" depends="detect-os,set-server-properties">
        <antcall target="server-build-composite-advanced" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-run-all-xml-composite-advanced" depends="detect-os,set-server-properties">
        <antcall target="server-build-xml-composite-advanced" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-run-all-xml-extended-composite-advanced" depends="detect-os,set-server-properties">
        <antcall target="server-build-xml-extended-composite-advanced" inheritRefs="true"/>
        <antcall target="server-deploy-runtest-undeploy" inheritRefs="true"/>
    </target>

    <target name="server-deploy-runtest-undeploy" depends="detect-os,set-server-properties">
        <antcall target="recover-server-sessionbeans" inheritRefs="true"/>
        <antcall target="cleanup-non-jta-ds-servertest" inheritRefs="true"/>
        <antcall target="server-deploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
        <antcall target="server-run-test" inheritRefs="true"/>
        <antcall target="server-undeploy" inheritRefs="true">
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
        <antcall target="store-project-cache-file" inheritRefs="true"/>
    </target>

    <!-- Build, deploy and run a test suite on the server using the prompt runner. -->
    <target name="server-run-all-prompt" depends="detect-os,set-server-properties">
        <antcall target="server-build" inheritRefs="true"/>
        <!--antcall target="server-deploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall-->
        <antcall target="server-run-test-prompt" inheritRefs="true"/>
        <!--antcall target="server-undeploy" inheritRefs="true">
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall-->
    </target>

    <!-- Build message to print depending on property value. -->
    <macrodef name="build-message">
        <attribute name="name"/>
        <attribute name="property"/>
        <attribute name="value"/>
        <attribute name="else"/>
        <sequential>
            <condition property="@{name}" value="@{value}" else="@{else}">
                <isset property="@{property}"/>
            </condition>
        </sequential>
    </macrodef>

    <!-- Build messages for test type checks. -->
    <macrodef name="check-test-type-message">
        <sequential>
            <build-message name="test.with.tenant.msg" property="is.test.with.tenant"
                value=" * Runing tests on WebLogic partition(s)"
                else=" * Runing tests on common application server"/>
            <build-message name="test.with.second.tenant.msg" property="is.test.with.second.tenant"
            value=" * Runing two test suites on two WebLogic partitions in parallel"
            else=" * Runing single test suite"/>
            <echo message="Test setup check:"/>
            <echo message="${test.with.tenant.msg}"/>
            <echo message="${test.with.second.tenant.msg}"/>
        </sequential>
    </macrodef>

    <target name="check-test-type">
        <!-- Check whether there is at least one tenant defined. -->
        <condition property="is.test.with.tenant" value="true">
            <and>
                <isset property="db.t1.url"/>
                <isset property="db.t1.user"/>
                <isset property="db.t1.pwd"/>
            </and>
        </condition>
        <!-- Check whether there are two tenants set. -->
        <condition property="is.test.with.second.tenant" value="true">
            <and>
                <isset property="is.test.with.tenant"/>
                <isset property="db.t2.url"/>
                <isset property="db.t2.user"/>
                <isset property="db.t2.pwd"/>
            </and>
        </condition>
    </target>

    <!-- Switch between running test in simple environment or in partition (with multitenancy enabled).
       - Both server-run-test-simple and server-run-test-partition tasks execution depends on is.test.with.tenant
       - property:
       -  * server-run-test-simple runs when is.test.with.tenant property is not set
       -  * server-run-test-partition runs when is.test.with.tenant property is set
     -->
    <target name="server-run-test-switch" depends="server-run-test-simple,server-run-test-partition"/>

    <!-- Switch between running test on a single partition or two partitions in parallel.
       - Both server-run-test-partition-single and server-run-test-partition-parallel tasks execution depends
       - on is.test.with.second.tenant property:
       -  * server-run-test-partition-single runs when is.test.with.second.tenant property is not set
       -  * server-run-test-partition-parallel runs when is.test.with.second.tenant property is set
     -->
    <target name="server-run-test-partition" if="is.test.with.tenant">
        <ant antfile="${jpatest.basedir}/${server.name}.xml" target="${server.name}-test" inheritRefs="true"/>
    </target>

    <!-- Builds tests classpath and evaluates if multitenant test properties are passed before calling test switcher. -->
    <target name="server-run-test" depends="config-classpath,check-test-type,server-run-test-switch"/>

    <macrodef name="server-run-test-call">
        <attribute name="platform"/>
        <attribute name="libs"/>
        <attribute name="dir.lib"/>
        <attribute name="dir.base"/>
        <attribute name="dir.build"/>
        <attribute name="dir.report"/>
        <attribute name="test.name"/>
        <attribute name="model.name"/>
        <attribute name="srv.name"/>
        <attribute name="srv.user"/>
        <attribute name="srv.pwd"/>
        <attribute name="proxy.user"/>
        <attribute name="ear"/>
        <attribute name="url"/>
        <attribute name="suite"/>
        <attribute name="runner"/>
        <attribute name="runner1"/>
        <attribute name="runner2"/>
        <attribute name="runner3"/>
        <attribute name="runner4"/>
        <attribute name="runner5"/>
        <attribute name="runner6"/>
        <sequential>
            <property name="server.lib.full" location="@{dir.lib}"/>
            <path id="run.path">
                <pathelement path="@{dir.base}/@{dir.build}/@{test.name}_client.jar"/>
                <pathelement path="@{dir.base}/@{dir.build}/@{model.name}_ejb.jar"/>
                <fileset dir="${server.lib.full}" includes="@{libs}"/>
                <path refid="compile.jpa21.server.path"/>
            </path>
            <pathconvert property="run.path.message" refid="run.path"/>
            <echo>Running test @{ear} on @{srv.name}</echo>
            <echo message=" * oracle.proxy.user = @{proxy.user}"/>
            <echo message=" * server.platform = @{platform}"/>
            <echo message=" * server.user = @{srv.user}"/>
            <echo message=" * server.pwd = @{srv.pwd}"/>
            <echo message=" * server.depend = @{libs}"/>
            <echo message=" * server.lib = ${server.lib.full}"/>
            <echo message=" * SERVER.URL = @{url}"/>
            <echo message=" * SERVER.TESTRUNNER = @{runner}"/>
            <echo message=" * SERVER.TESTRUNNER1 = @{runner1}"/>
            <echo message=" * SERVER.TESTRUNNER2 = @{runner2}"/>
            <echo message=" * SERVER.TESTRUNNER3 = @{runner3}"/>
            <echo message=" * SERVER.TESTRUNNER4 = @{runner4}"/>
            <echo message=" * SERVER.TESTRUNNER5 = @{runner5}"/>
            <echo message=" * SERVER.TESTRUNNER6 = @{runner6}"/>
            <echo message=" * run.metadata.cache.test.suite = ${run.metadata.cache.test.suite}"/>
            <echo message=" * run.path = ${run.path.message}"/>
            <echo message=" * run.dir = ${run.dir}"/>
            <echo message=" * TEST_SUITE = @{suite}"/>
            <mkdir dir="@{dir.base}/@{dir.report}"/>
            <junit printsummary="yes" haltonfailure="yes" failureproperty="junit.failed" fork="yes"
                forkmode="once" showoutput="true" maxmemory="256m" dir="${run.dir}">
                <sysproperty key="proxy.user.name" value="@{proxy.user}"/>
                <sysproperty key="server.platform" value="@{platform}"/>
                <sysproperty key="server.user" value="@{srv.user}"/>
                <sysproperty key="server.password" value="@{srv.pwd}"/>
                <sysproperty key="server.url" value="@{url}"/>
                <sysproperty key="server.testrunner" value="@{runner}"/>
                <sysproperty key="server.testrunner1" value="@{runner1}"/>
                <sysproperty key="server.testrunner2" value="@{runner2}"/>
                <sysproperty key="server.testrunner3" value="@{runner3}"/>
                <sysproperty key="server.testrunner4" value="@{runner4}"/>
                <sysproperty key="server.testrunner5" value="@{runner5}"/>
                <sysproperty key="server.testrunner6" value="@{runner6}"/>
                <sysproperty key="server.run" value="TRUE"/>
                <sysproperty key="com.ibm.SSL.ConfigURL" value="${com.ibm.SSL.ConfigURL}"/>
                <sysproperty key="com.ibm.CORBA.ConfigURL" value="${com.ibm.CORBA.ConfigURL}"/>
                <sysproperty key="run.metadata.cache.test.suite" value="${run.metadata.cache.test.suite}"/>
                <classpath refid="run.path"/>
                <formatter type="xml"/>
                <test name="@{suite}" haltonfailure="no" outfile="@{dir.report}/@{suite}-test-results"/>
            </junit>
        </sequential>
    </macrodef>

    <!-- Run an ear on the server. -->
    <target name="server-run-test-simple" unless="is.test.with.tenant">
        <server-run-test-call
            platform="${server.platform}"
            libs="${server.depend}"
            dir.lib="${server.lib}"
            dir.base="${jpatest.basedir}"
            dir.build="${build.dir}"
            dir.report="${report.dir}"
            test.name="${TEST_NAME}"
            model.name="${MODEL_NAME}"
            srv.name="${server.name}"
            srv.user="${server.user}"
            srv.pwd="${server.pwd}"
            proxy.user="${oracle.proxy.user}"
            ear="${EAR_NAME}"
            url="${SERVER.URL}"
            suite="${TEST_SUITE}"
            runner="${SERVER.TESTRUNNER}"
            runner1="${SERVER.TESTRUNNER1}"
            runner2="${SERVER.TESTRUNNER2}"
            runner3="${SERVER.TESTRUNNER3}"
            runner4="${SERVER.TESTRUNNER4}"
            runner5="${SERVER.TESTRUNNER5}"
            runner6="${SERVER.TESTRUNNER6}"
        />
    </target>

    <!-- Run an ear on the server using prompt runner. -->
    <target name="server-run-test-prompt" depends="config-classpath">
        <property file="${user.home}/${server.name}.properties"/>
        <property file="${jpatest.basedir}/${server.name}.properties"/>
        <path id="run.path">
            <pathelement path="${jpatest.basedir}/${build.dir}/${TEST_NAME}_client.jar"/>
            <pathelement path="${jpatest.basedir}/${build.dir}/${MODEL_NAME}_ejb.jar"/>
            <fileset dir="${server.lib}" includes="${server.depend}"/>
            <path refid="compile.server.path"/>
        </path>
        <echo>Running test ${EAR_NAME} on ${server.name}</echo>
        <mkdir dir="${jpatest.basedir}/${report.dir}"/>
        <condition property="jvmarg.performance.baseline.version" value="-Dtoplink.loadbuild.baseline-version=${performance.baseline.version}">
            <isset property="performance.baseline.version"/>
        </condition>
        <condition property="jvmarg.performance.baseline.version" value="-Ddummy=dummy">
            <not>
                <isset property="performance.baseline.version"/>
            </not>
        </condition>
        <java classname="org.eclipse.persistence.testing.framework.PromptTestRunner"
             fork="true"
             maxmemory="512m"
             failonerror="false"
             dir="${run.dir}">
            <jvmarg value="${jvmarg.performance.baseline.version}"/>
            <jvmarg value="-Declipselink.logging.level=${logging.level}"/>
            <jvmarg value="-Ddb.driver=${db.driver}"/>
            <jvmarg value="-Ddb.url=${db.url}"/>
            <jvmarg value="-Ddb.user=${db.user}"/>
            <jvmarg value="-Ddb.pwd=${db.pwd}"/>
            <jvmarg value="-Ddb.platform=${db.platform}"/>
            <jvmarg value="-Dserver.platform=${server.platform}"/>
            <jvmarg value="-Dserver.user=${server.user}"/>
            <jvmarg value="-Dserver.password=${server.pwd}"/>
            <jvmarg value="-Dserver.url=${server.url}${APP_NAME}"/>
            <jvmarg value="-Dserver.testrunner=${server.testrunner}"/>
            <jvmarg value="-Dserver.run=TRUE"/>
            <arg value="testmodel=${TEST_SUITE}"/>
            <arg value="regressionlog=../${report.dir}/test.log"/>
            <arg value="saveresults=${should.save.results}" />
            <classpath>
                <path refid="run.path"/>
            </classpath>
        </java>
    </target>

    <!-- Server Tests -->
    <!-- Run the LRG -->
    <target name="server-test">
        <antcall target="server-test-lrg" inheritRefs="true"/>
    </target>

    <!-- Run all the JPA tests in the server -->
    <target name="server-test-lrg" depends="clean-test">
        <antcall target="server-test-advanced" inheritRefs="true"/>
        <antcall target="server-test-advanced-multitenant" inheritRefs="true"/>
        <antcall target="server-test-beanvalidation" inheritRefs="true"/>
        <antcall target="server-test-cacheable" inheritRefs="true"/>
        <antcall target="server-test-cascadedeletes" inheritRefs="true"/>
        <antcall target="server-test-criteria" inheritRefs="true"/>
        <antcall target="server-test-datatypes" inheritRefs="true"/>
        <antcall target="server-test-datetime" inheritRefs="true"/>
        <antcall target="server-test-ddlgeneration" inheritRefs="true"/>
        <antcall target="server-test-delimited" inheritRefs="true"/>
        <antcall target="server-test-extensibility" inheritRefs="true"/>
        <antcall target="server-test-fetchgroups" inheritRefs="true"/>
        <antcall target="server-test-fieldaccess-advanced" inheritRefs="true"/>
        <antcall target="server-test-fieldaccess-fetchgroups" inheritRefs="true"/>
        <antcall target="server-test-fieldaccess-relationships" inheritRefs="true"/>
        <antcall target="server-test-inheritance" inheritRefs="true"/>
        <antcall target="server-test-inherited" inheritRefs="true"/>
        <antcall target="server-test-jpaadvancedproperties" inheritRefs="true"/>
        <antcall target="server-test-jpql" inheritRefs="true"/>
        <antcall target="server-test-lob" inheritRefs="true"/>
        <antcall target="server-test-metamodel" inheritRefs="true"/>
        <antcall target="server-test-nativeapitest" inheritRefs="true"/>
        <antcall target="server-test-orphanremoval" inheritRefs="true"/>
        <antcall target="server-test-plsql" inheritRefs="true"/>
        <antcall target="server-test-privateowned" inheritRefs="true"/>
        <antcall target="server-test-relationships" inheritRefs="true"/>
        <antcall target="server-test-sessionbean" inheritRefs="true"/>
        <antcall target="server-test-validation" inheritRefs="true"/>
        <antcall target="server-test-xml-mergeinherited" inheritRefs="true"/>
        <antcall target="server-test-xmltest" inheritRefs="true"/>
        <!-- The following models are oracle specific -->
        <antcall target="server-test-custom-features" inheritRefs="true"/>
        <antcall target="server-test-jgeometry" inheritRefs="true"/>
        <antcall target="server-test-oracle-timestamptz" inheritRefs="true"/>
        <antcall target="server-test-struct-converter" inheritRefs="true"/>
        <!-- Oracle proxy authentication needs to be setup properly for the following model -->
        <antcall target="server-test-proxy-authentication" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <!-- Run all the JPA21 tests in the server -->
    <target name="server-test-jpa21-lrg" depends="clean-test">
        <antcall target="server-test-jpa21-advanced" inheritRefs="true"/>
        <antcall target="server-test-jpa21-sessionbean" inheritRefs="true"/>
    </target>

    <!-- Run all the JPA22 tests in the server -->
    <target name="server-test-jpa22-lrg" depends="clean-test">
        <antcall target="server-test-jpa22-advanced" inheritRefs="true"/>
        <antcall target="server-test-jpa22-sessionbean" inheritRefs="true"/>
    </target>

    <!-- Testing Metadata Cache by running JPA tests in the server -->
    <target name="server-test-project-cache" depends="clean-test">
        <antcall target="server-test-advanced" inheritRefs="true"/>
        <antcall target="server-test-advanced-multitenantEMF" inheritRefs="true"/>
        <antcall target="server-test-advanced-multitenant123" inheritRefs="true"/>
        <!--antcall target="server-test-extensibility" inheritRefs="true"/-->
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-performance">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="performance"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/performance"/>
            <param name="MODEL_NAME" value="jpa-performance"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/performance"/>
            <param name="TEST_NAME" value="jpa-performance"/>
            <param name="EAR_NAME" value="jpa-performance"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.performance.JPAPerformanceServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-advanced">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.AdvancedServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-advanced-multitenant">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.multitenant.AdvancedMultiTenantServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpa21-advanced">
        <copy todir="${jpatest.basedir}/resource/eclipselink-jpa21-model/server" overwrite="true" filtering="true">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-jpa21-model/"
                     includes="*orm.xml
                               *.jdbc"/>
        </copy>
        <antcall target="server-run-all-jpa21" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa21/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-jpa21-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa21/advanced"/>
            <param name="TEST_NAME" value="eclipselink-jpa21-model"/>
            <param name="EAR_NAME" value="eclipselink-jpa21-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa21.advanced.JPA21TestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <delete>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-jpa21-model/server"
                     includes="*orm.xml
                              *.jdbc"/>
        </delete>
    </target>
    <target name="server-test-jpa22-advanced">
        <copy todir="${jpatest.basedir}/resource/eclipselink-jpa22-model/server" overwrite="true" filtering="true">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-jpa22-model/"
                     includes="*orm.xml
                               *.jdbc"/>
        </copy>
        <antcall target="server-run-all-jpa22" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa22/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-jpa22-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa22/advanced"/>
            <param name="TEST_NAME" value="eclipselink-jpa22-model"/>
            <param name="EAR_NAME" value="eclipselink-jpa22-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa22.advanced.JPA22TestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <delete>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-jpa22-model/server"
                     includes="*orm.xml
                              *.jdbc"/>
        </delete>
    </target>
    <target name="server-test-beanvalidation">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="beanvalidation"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/beanvalidation"/>
            <param name="MODEL_NAME" value="eclipselink-beanvalidation-model"/>
            <!-- This also includes dynamic entity test class - tests pass but maybe should separate -->
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/beanvalidation"/>
            <param name="TEST_NAME" value="eclipselink-beanvalidation-model"/>
            <param name="EAR_NAME" value="eclipselink-beanvalidation-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.beanvalidation.BeanValidationJunitTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <!--<antcall target="server-run-all" inheritRefs="true">-->
            <!--<param name="PERSISTENCE_UNIT_NAME" value="beanvalidation-dynamic"/>-->
            <!--<param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/beanvalidation-dynamic"/>-->
            <!--<param name="MODEL_NAME" value="eclipselink-beanvalidation-dynamic-model"/>-->
            <!--<param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/beanvalidation/dynamic"/>-->
            <!--<param name="TEST_NAME" value="eclipselink-beanvalidation-dynamic-model"/>-->
            <!--<param name="EAR_NAME" value="eclipselink-beanvalidation-dynamic-model"/>-->
            <!--<param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.beanvalidation.dynamic.BeanValidationDynamicEntityJunitTest"/>-->
            <!--<param name="eclipselink.jpa.test.dir" value="."/>-->
        <!--</antcall>-->
    </target>

    <target name="prepare-project-cache-persistence-xml">
        <move file="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml" tofile="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml.original"/>
        <move file="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml.projectcache" tofile="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml"/>
    </target>

    <target name="restore-multitenant-persistence-xml">
        <move file="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml" tofile="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml.projectcache"/>
        <move file="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml.original" tofile="${jpatest.basedir}/resource/eclipselink-advanced-multitenant-model/server/persistence.xml"/>
    </target>

    <target name="server-test-advanced-multitenantEMF">
        <antcall target="prepare-project-cache-persistence-xml" inheritRefs="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-multitenant-model-EMF"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.multitenant.AdvancedMultiTenantSharedEMFJunitTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="restore-multitenant-persistence-xml" inheritRefs="true"/>
    </target>

    <target name="server-test-advanced-multitenant123">
        <antcall target="prepare-project-cache-persistence-xml" inheritRefs="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-multitenant-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-multitenant-model-123"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.multitenant.AdvancedMultiTenant123JunitTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="restore-multitenant-persistence-xml" inheritRefs="true"/>
    </target>

    <!--this model is only used for testing that setting eclipselink as default provider on weblogic domain-->
    <target name="weblogic-domain-test" depends="clean-test">
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-domain-setup" inheritRefs="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-domaintest-advanced-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/advanced"/>
            <param name="TEST_NAME" value="eclipselink-domaintest-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-domaintest-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.advanced.AdvancedServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-domain-reset" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-cacheable">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/cacheable"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/cacheable"/>
            <param name="MODEL_NAME" value="eclipselink-cacheable-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/cacheable"/>
            <param name="TEST_NAME" value="eclipselink-cacheable-model"/>
            <param name="EAR_NAME" value="eclipselink-cacheable-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.cacheable.CacheableServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-cascadedeletes">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="cascade-deletes"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/cascadedeletes"/>
            <param name="MODEL_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/cascadedeletes"/>
            <param name="TEST_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="EAR_NAME" value="eclipselink-cascadedeletes-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.cascadedeletes.CascadeDeletesJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-criteria">
        <property name="is.criteria.server.test" value="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/criteria"/>
            <param name="TEST_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="EAR_NAME" value="eclipselink-advanced-model-criteria"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.criteria.CriteriaServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-datatypes">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/datatypes"/>
            <param name="MODEL_NAME" value="eclipselink-datatypes-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/datatypes"/>
            <param name="TEST_NAME" value="eclipselink-datatypes-model"/>
            <param name="EAR_NAME" value="eclipselink-datatypes-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.datatypes.NullBindingJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-datetime">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/datetime"/>
            <param name="MODEL_NAME" value="eclipselink-datetime-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/datetime"/>
            <param name="TEST_NAME" value="eclipselink-datetime-model"/>
            <param name="EAR_NAME" value="eclipselink-datetime-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.datetime.NullBindingJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-ddlgeneration" depends="cleanup-merge-inherited-ddl">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/ddlgeneration"/>
            <param name="MODEL_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/ddlgeneration"/>
            <param name="TEST_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="EAR_NAME" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.ddlgeneration.DDLGenerationServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-delimited">
        <copy file="${jpatest.basedir}/resource/eclipselink-delimited-model/orm.xml" todir="${jpatest.basedir}/resource/eclipselink-delimited-model/server" overwrite="true" filtering="true"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="delimited"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/delimited"/>
            <param name="MODEL_NAME" value="eclipselink-delimited-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/delimited"/>
            <param name="TEST_NAME" value="eclipselink-delimited-model"/>
            <param name="EAR_NAME" value="eclipselink-delimited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.delimited.DelimitedPUTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-extensibility">
        <copy todir="${jpatest.basedir}/resource/eclipselink-extensibility-model/server"  overwrite="true">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-extensibility-model/repository" includes="extension*.*"/>
        </copy>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="extensibility"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/extensibility"/>
            <param name="MODEL_NAME" value="eclipselink-extensibility-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/extensibility"/>
            <param name="TEST_NAME" value="eclipselink-extensibility-model"/>
            <param name="EAR_NAME" value="eclipselink-extensibility-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.extensibility.ExtensibilityTests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fetchgroups">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-fetchgroups-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fetchgroups"/>
            <param name="TEST_NAME" value="eclipselink-fetchgroups-model"/>
            <param name="EAR_NAME" value="eclipselink-fetchgroups-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fetchgroups.FetchGroupsServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fieldaccess-advanced">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="fieldaccess"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fieldaccess/advanced"/>
            <param name="TEST_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="EAR_NAME" value="eclipselink-advanced-field-access-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.advanced.FAServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fieldaccess-fetchgroups">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="fieldaccess"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-fetchgroups-field-access-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fieldaccess/fetchgroups"/>
            <param name="TEST_NAME" value="eclipselink-fetchgroups-field-access-model"/>
            <param name="EAR_NAME" value="eclipselink-fetchgroups-field-access-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.fetchgroups.FAServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-fieldaccess-relationships">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="fieldaccess"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/relationships"/>
            <param name="MODEL_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/fieldaccess/relationships"/>
            <param name="TEST_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="EAR_NAME" value="eclipselink-relationships-field-access-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.fieldaccess.relationships.FRServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-inheritance">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/inheritance"/>
            <param name="MODEL_NAME" value="eclipselink-inheritance-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/inheritance"/>
            <param name="TEST_NAME" value="eclipselink-inheritance-model"/>
            <param name="EAR_NAME" value="eclipselink-inheritance-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.inheritance.InheritanceServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-inherited">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/inherited"/>
            <param name="MODEL_NAME" value="eclipselink-inherited-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/inherited"/>
            <param name="TEST_NAME" value="eclipselink-inherited-model"/>
            <param name="EAR_NAME" value="eclipselink-inherited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.inherited.InheritedServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpars" depends="clean-test, set-server-properties" if="is.glassfish.or.weblogic">
        <antcall target="server-test-jpars-core" inheritRefs="true"/>
    </target>

    <target name="server-test-jpars-on-toplink-dataservices" depends="clean-test, set-server-properties" if="is.glassfish.or.weblogic">
        <property name="test.jpars.on.toplink.dataservices" value="true"/>
        <antcall target="server-test-jpars-core" inheritRefs="true"/>
    </target>

    <!-- Since in nightly GlassFish 4 and WebLogic testing, the property is.JTA can't be passed to server, so we force isJTA() returns false in JUnitTestCase.java -->
    <target name="server-test-jpars-core">
        <echo message="jpars url is ${jpars.url}"/>
        <copy file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_original"/>
        <copy file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_nonjtaDS" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" overwrite="true"/>
        <copy file="${jpatest.basedir}/../eclipselink.jpars.test/src/META-INF/persistence.xml" tofile="${jpatest.basedir}/../eclipselink.jpars.test/src/META-INF/persistence.xml.original" overwrite="true"/>
        <replace file="${jpatest.basedir}/../eclipselink.jpars.test/src/META-INF/persistence.xml" token='Glassfish' value="${server.platform}"/>
        <property name="MODEL_NAME" value="eclipselink-jpars-model"/>
        <property name="EAR_NAME" value="${MODEL_NAME}"/>
        <antcall target="server-build-ear-jpars" inheritRefs="true"/>
        <antcall target="server-deploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
        <ant antfile="antbuild.xml" dir="${jpatest.basedir}/../eclipselink.jpars.test"  target="test" inheritAll="false">
            <property name="SERVER_URL" value="${jpars.url}"/>
            <property name="JPARS_VERSION" value="v1.0"/>
        </ant>
        <antcall target="server-undeploy" inheritRefs="true">
            <param name="ear.name" value="${EAR_NAME}.ear"/>
            <param name="application.name" value="${EAR_NAME}"/>
        </antcall>
        <copy todir="${jpatest.basedir}/${report.dir}">
            <fileset dir="${jpatest.basedir}/../eclipselink.jpars.test/reports" includes="*.*"/>
        </copy>
        <move file="${jpatest.basedir}/../eclipselink.jpars.test/src/META-INF/persistence.xml.original" tofile="${jpatest.basedir}/../eclipselink.jpars.test/src/META-INF/persistence.xml" overwrite="true"/>
        <move file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_original" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" overwrite="true"/>
    </target>

    <target name="server-test-plsql">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="plsql"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/plsql"/>
            <param name="MODEL_NAME" value="eclipselink-plsql-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/plsql"/>
            <param name="TEST_NAME" value="eclipselink-plsql-model"/>
            <param name="EAR_NAME" value="eclipselink-plsql-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.plsql.PLSQLTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-partitioned-gridlink">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="partitioned"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/partitioned"/>
            <param name="MODEL_NAME" value="eclipselink-partitioned-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/partitioned"/>
            <param name="TEST_NAME" value="eclipselink-partitioned-model"/>
            <param name="EAR_NAME" value="eclipselink-partitioned-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.partitioned.PartitionedTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpaadvancedproperties">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="JPAADVProperties"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/jpaadvancedproperties"/>
            <param name="MODEL_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="MODEL_NAME2" value="eclipselink-advanced-properties"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/jpaadvancedproperties"/>
            <param name="TEST_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="EAR_NAME" value="eclipselink-jpaadvancedproperties-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.jpaadvancedproperties.JPAAdvPropertiesJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpql">
        <copy todir="${jpatest.basedir}/resource/eclipselink-jpql-model/server/" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-annotation-model/">
                <include name="case-sensitive-advanced-entity-mappings.xml"/>
            </fileset>
        </copy>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/relationships"/>
            <param name="MODEL_NAME" value="eclipselink-jpql-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/jpql"/>
            <param name="TEST_NAME" value="eclipselink-jpql-model"/>
            <param name="EAR_NAME" value="eclipselink-jpql-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.jpql.JPQLServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <delete>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-jpql-model/server/">
                <include name="case-sensitive-advanced-entity-mappings.xml"/>
            </fileset>
        </delete>
    </target>

    <target name="server-test-lob">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/lob"/>
            <param name="MODEL_NAME" value="eclipselink-lob-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/lob"/>
            <param name="TEST_NAME" value="eclipselink-lob-model"/>
            <param name="EAR_NAME" value="eclipselink-lob-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.lob.LobJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-metamodel">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/metamodel"/>
            <param name="MODEL_NAME" value="eclipselink-metamodel-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/metamodel"/>
            <param name="TEST_NAME" value="eclipselink-metamodel-model"/>
            <param name="EAR_NAME" value="eclipselink-metamodel-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.metamodel.MetamodelMetamodelTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-nativeapitest">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="nativeapitest"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/nativeapitest"/>
            <param name="MODEL_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/nativeapitest"/>
            <param name="TEST_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="EAR_NAME" value="eclipselink-nativeapitest-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.nativeapitest.NativeAPITests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-orphanremoval">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/orphanremoval"/>
            <param name="MODEL_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/orphanremoval"/>
            <param name="TEST_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="EAR_NAME" value="eclipselink-orphanremoval-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.orphanremoval.OrphanRemovalJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-privateowned">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/privateowned"/>
            <param name="MODEL_NAME" value="eclipselink-privateowned-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/privateowned"/>
            <param name="TEST_NAME" value="eclipselink-privateowned-model"/>
            <param name="EAR_NAME" value="eclipselink-privateowned-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.privateowned.PrivateOwnedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-relationships">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/relationships"/>
            <param name="MODEL_NAME" value="eclipselink-relationships-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/relationships"/>
            <param name="TEST_NAME" value="eclipselink-relationships-model"/>
            <param name="EAR_NAME" value="eclipselink-relationships-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.relationships.RelationshipsServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-sessionbean">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.sessionbean.SessionBeanTests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <!-- This target can only be called in an Oracle High Availability environment -
        a WebLogic server configured with Multi Data Sources to connect to Oracle RAC database
    -->
    <target name="server-test-sessionbean-ha">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/fieldaccess/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.sessionbean.SessionBeanHATests"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-jpa21-sessionbean">
        <antcall target="server-run-all-jpa21" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="jpa21-sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa21/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa21/entity-listener"/>
            <param name="MODEL_NAME" value="eclipselink-jpa21-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa21/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-jpa21-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-jpa21-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa21.sessionbean.EntityListenerInjectionTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-jpa22-sessionbean">
        <antcall target="server-run-all-jpa22" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="jpa22-sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa22/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa22/entity-listener"/>
            <param name="MODEL_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa22/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa22.sessionbean.EntityListenerInjectionTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="server-run-all-jpa22" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="jpa22-sessionbean"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa22/sessionbean"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa22/entity-listener"/>
            <param name="MODEL_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa22/sessionbean"/>
            <param name="TEST_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="EAR_NAME" value="eclipselink-jpa22-sessionbean-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa22.sessionbean.AttributeConverterInjectionTest"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-validation">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-validation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/validation"/>
            <param name="TEST_NAME" value="eclipselink-validation-model"/>
            <param name="EAR_NAME" value="eclipselink-validation-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.validation.CMP3ValidationTestModel"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-xml-mergeinherited" depends="cleanup-merge-inherited-ddl">
        <copy todir="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_merge-inherited"  overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-ddl-generation-model" includes="merge-*.xml"/>
        </copy>
        <move file="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server" tofile="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_ddl"/>
        <move file="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_merge-inherited" tofile="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="ddlGeneration"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml/merge/inherited"/>
            <param name="MODEL_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="MODEL_NAME2" value="eclipselink-ddl-generation-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml/merge/inherited"/>
            <param name="TEST_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-merge-inherited-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.merge.inherited.EntityMappingsMergeInheritedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <antcall target="cleanup-merge-inherited-ddl"/>
    </target>

    <target name="server-test-dll-existence">
        <available file="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_ddl" property="server_ddl.exists" value="true" />
    </target>

    <target name="cleanup-merge-inherited-ddl" depends="server-test-dll-existence" if="server_ddl.exists">
        <move file="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server" tofile="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_merge-inherited"/>
        <move file="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_ddl" tofile="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server"/>
        <delete>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-ddl-generation-model/server_merge-inherited/">
                <include name="merge-*.xml"/>
            </fileset>
        </delete>
    </target>

    <target name="server-test-xmltest">
        <copy todir="${jpatest.basedir}/resource/eclipselink-xml-servertest-model/server/" overwrite="true" failonerror="false">
            <fileset dir="${jpatest.basedir}/resource/eclipselink-xml-merge-model/">
                <include name="*.xml"/>
            </fileset>
            <fileset dir="${jpatest.basedir}/resource/eclipselink-xml-only-model/">
                <include name="*.xml"/>
            </fileset>
        </copy>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="USE_MULTIPLE_PERSISTENCE_UNITS" value="true"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/xml"/>
            <param name="MODEL_DIR2" value="org/eclipse/persistence/testing/models/jpa/advanced"/>
            <param name="MODEL_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml"/>
            <param name="TEST_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-servertest-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.EntityMappingsServerJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
    </target>

    <target name="server-test-composite-advanced" depends="clean-test">
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-setup" inheritRefs="true"/>
        <antcall target="server-run-all-composite-advanced" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="composite-advanced"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/composite/advanced"/>
            <param name="TEST_NAME" value="eclipselink-composite-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-composite-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.composite.advanced.EntityManagerJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-reset" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-xml-composite-advanced" depends="clean-test">
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-setup" inheritRefs="true"/>
        <antcall target="server-run-all-xml-composite-advanced" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="xml-composite-advanced"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml/composite"/>
            <param name="TEST_NAME" value="eclipselink-xml-composite-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-composite-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.composite.advanced.EntityMappingsAdvancedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-reset" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-xml-extended-composite-advanced" depends="clean-test">
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-setup" inheritRefs="true"/>
        <antcall target="server-run-all-xml-extended-composite-advanced" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="xml-extended-composite-advanced"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/xml/composite"/>
            <param name="TEST_NAME" value="eclipselink-xml-extended-composite-advanced-model"/>
            <param name="EAR_NAME" value="eclipselink-xml-extended-composite-advanced-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.xml.composite.advanced.EntityMappingsAdvancedJUnitTestCase"/>
            <param name="eclipselink.jpa.test.dir" value="."/>
        </antcall>
        <ant antfile="${jpatest.basedir}/weblogic.xml" target="weblogic-composite-reset" inheritRefs="true"/>
        <antcall target="generate-report" inheritRefs="true"/>
    </target>

    <target name="server-test-oracle-timestamptz" if="is.oracle">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="default"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/timestamptz"/>
            <param name="MODEL_NAME" value="eclipselink-timestamptz-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/timestamptz"/>
            <param name="TEST_NAME" value="eclipselink-timestamptz-model"/>
            <param name="EAR_NAME" value="eclipselink-timestamptz-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.timestamptz.TimeStampTZJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>

    <target name="server-test-custom-features" if="run.jpa.customfeatures.model">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="customfeatures"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/customfeatures"/>
            <param name="MODEL_NAME" value="eclipselink-customfeatures-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/customfeatures"/>
            <param name="TEST_NAME" value="eclipselink-customfeatures-model"/>
            <param name="EAR_NAME" value="eclipselink-customfeatures-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.customfeatures.CustomFeaturesJUnitTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>

    <!-- Since in nightly GlassFish 4 and WebLogic testing, the property is.JTA can't be passed to server, so we force isJTA() returns false in JUnitTestCase.java -->
    <target name="server-test-mongotest" depends="clean-test" if="is.glassfish.or.weblogic">
        <copy file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_original"/>
        <copy file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_nonjtaDS" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" overwrite="true"/>
        <antcall target="server-test-mongo-xml" inheritRefs="true"/>
        <antcall target="server-test-mongo" inheritRefs="true"/>
        <move file="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java_original" tofile="${jpatest.basedir}/src/org/eclipse/persistence/testing/framework/junit/JUnitTestCase.java" overwrite="true"/>
        <antcall target="generate-report" inheritRefs="true"/>    </target>

    <target name="server-test-mongo" if="is.glassfish.or.weblogic">
        <copy file="./../../foundation/eclipselink.extension.nosql.test/resource/mongo/mongo-dynamic.xml" todir="${jpatest.basedir}/resource/eclipselink-mongo-model/server"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="mongo"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/mongo"/>
            <param name="MODEL_NAME" value="eclipselink-mongo-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/mongo"/>
            <param name="TEST_NAME" value="eclipselink-mongo-model"/>
            <param name="EAR_NAME" value="eclipselink-mongo-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.mongo.MongoTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.nosql.test"/>
        </antcall>
        <delete file="${jpatest.basedir}/resource/eclipselink-mongo-model/server/mongo-dynamic.xml" failonerror="false"/>
    </target>

    <target name="server-test-mongo-xml" if="is.glassfish.or.weblogic">
        <copy file="./../../foundation/eclipselink.extension.nosql.test/resource/mongo/mongo-orm.xml" todir="${jpatest.basedir}/resource/eclipselink-mongo-model-xml/server"/>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="mongo-xml"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/mongo"/>
            <param name="MODEL_NAME" value="eclipselink-mongo-model-xml"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/mongo"/>
            <param name="TEST_NAME" value="eclipselink-mongo-model-xml"/>
            <param name="EAR_NAME" value="eclipselink-mongo-model-xml"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.mongo.MongoXMLTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.nosql.test"/>
        </antcall>
        <delete file="${jpatest.basedir}/resource/eclipselink-mongo-model-xml/server/mongo-orm.xml" failonerror="false"/>
    </target>

    <target name="server-test-jgeometry" if="is.oracle">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="structConverter"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/structconverter"/>
            <param name="MODEL_NAME" value="eclipselink-jgeometry-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/jgeometry"/>
            <param name="TEST_NAME" value="eclipselink-jgeometry-model"/>
            <param name="EAR_NAME" value="eclipselink-jgeometry-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.jgeometry.SpatialJPQLTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.spatial.test"/>
        </antcall>
    </target>
    <target name="server-test-struct-converter" if="is.oracle">
        <echo message="Creating MY_GEOMETRY datatype for spatial tests: ${db.url}..."/>
        <sql driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.pwd}"
            onerror="continue"
            >
            <classpath>
                <pathelement location="${jdbc.driver.jar}"/>
            </classpath>
CREATE OR REPLACE TYPE MY_GEOMETRY AS OBJECT (id NUMBER, geom MDSYS.SDO_GEOMETRY);
        </sql>
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="structConverter"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/structconverter"/>
            <param name="MODEL_NAME" value="eclipselink-structconverter-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/structconverter"/>
            <param name="TEST_NAME" value="eclipselink-structconverter-model"/>
            <param name="EAR_NAME" value="eclipselink-structconverter-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.structconverter.StructConverterTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.spatial.test"/>
        </antcall>
    </target>

    <target name="server-test-proxy-authentication" if="is.ready.for.proxy.authentication">
        <antcall target="server-run-all" inheritRefs="true">
            <param name="PERSISTENCE_UNIT_NAME" value="proxyauthentication"/>
            <param name="MODEL_DIR" value="org/eclipse/persistence/testing/models/jpa/proxyauthentication"/>
            <param name="MODEL_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="TEST_DIR" value="org/eclipse/persistence/testing/tests/jpa/proxyauthentication"/>
            <param name="TEST_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="EAR_NAME" value="eclipselink-proxyauthentication-model"/>
            <param name="TEST_SUITE" value="org.eclipse.persistence.testing.tests.jpa.proxyauthentication.ProxyAuthenticationServerTestSuite"/>
            <param name="eclipselink.jpa.test.dir" value="./../../foundation/eclipselink.extension.oracle.test"/>
        </antcall>
    </target>
    <!-- *********** CacheCoordination Test Targets -->
    <target name="server-start-cachecoordination" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination" inheritRefs="true"/>
    </target>
    <target name="server-start-admin" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-admin" inheritRefs="true"/>
    </target>
    <target name="server-start-cachecoordination-1" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination-1" inheritRefs="true"/>
    </target>
    <target name="server-start-cachecoordination-2" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination-2" inheritRefs="true"/>
    </target>
    <target name="server-start-cachecoordination-3" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination-3" inheritRefs="true"/>
    </target>
    <target name="server-start-cachecoordination-jms" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-start-cachecoordination-jms" inheritRefs="true"/>
    </target>
    <target name="server-stop-cachecoordination" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination_${server.name}.xml" target="${server.name}-stop-cachecoordination" inheritRefs="true"/>
    </target>
    <target name="server-run-test-cachecoordination" depends="clean-test,detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination-cluster.xml" target="${server.name}-run-test-cachecoordination" inheritRefs="true"/>
    </target>
    <target name="server-deploy-concurrency" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination-cluster.xml" target="${server.name}-build-deploy-concurrency" inheritRefs="true"/>
    </target>
    <target name="server-undeploy-concurrency" depends="detect-os,config-classpath">
        <ant antfile="${jpatest.basedir}/cachecoordination-cluster.xml" target="${server.name}-undeploy-concurrency" inheritRefs="true"/>
    </target>

</project>
