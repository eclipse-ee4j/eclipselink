<?xml version = '1.0' encoding = 'UTF-8'?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0,
    or the Eclipse Distribution License v. 1.0 which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

-->

<database-platform>
   <name>Oracle9i</name>
   <runtime-platform-class>org.eclipse.persistence.platform.database.oracle.Oracle9Platform</runtime-platform-class>
   <supports-native-sequencing>true</supports-native-sequencing>
   <supports-native-returning>true</supports-native-returning>
   <database-types>
      <database-type>
         <name>BFILE</name>
         <jdbc-type>OTHER</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>BLOB</name>
         <jdbc-type>BLOB</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>CHAR</name>
         <jdbc-type>CHAR</jdbc-type>
         <allows-size>true</allows-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>CLOB</name>
         <jdbc-type>CLOB</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>DATE</name>
         <jdbc-type>DATE</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>FLOAT</name>
         <jdbc-type>FLOAT</jdbc-type>
         <allows-size>true</allows-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>INTERVAL DAY(2) TO SECOND(6)</name>
         <comment>this is what comes back for "INTERVAL DAY TO SECOND"</comment>
         <jdbc-type>OTHER</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>INTERVAL DAY TO SECOND</name>
         <comment>this is a write-only type - it will come back as "INTERVAL DAY(2) TO SECOND(6)"</comment>
         <jdbc-type>OTHER</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>INTERVAL YEAR(2) TO MONTH</name>
         <comment>this is what comes back for "INTERVAL YEAR TO MONTH"</comment>
         <jdbc-type>OTHER</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>INTERVAL YEAR TO MONTH</name>
         <comment>this is a write-only type - it will come back as "INTERVAL YEAR(2) TO MONTH"</comment>
         <jdbc-type>OTHER</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>LONG</name>
         <jdbc-type>LONGVARCHAR</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>LONG RAW</name>
         <jdbc-type>LONGVARBINARY</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>NCHAR</name>
         <jdbc-type>CHAR</jdbc-type>
         <allows-size>true</allows-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>NCLOB</name>
         <jdbc-type>CLOB</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>NUMBER</name>
         <jdbc-type>DECIMAL</jdbc-type>
         <allows-size>true</allows-size>
         <allows-sub-size>true</allows-sub-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>NVARCHAR2</name>
         <jdbc-type>VARCHAR</jdbc-type>
         <allows-size>true</allows-size>
         <requires-size>true</requires-size>
         <initial-size>20</initial-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>RAW</name>
         <jdbc-type>VARBINARY</jdbc-type>
         <allows-size>true</allows-size>
         <requires-size>true</requires-size>
         <initial-size>2000</initial-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>REAL</name>
         <jdbc-type>FLOAT</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>ROWID</name>
         <jdbc-type>DECIMAL</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP</name>
         <comment>this is a write-only type - it will come back as "TIMESTAMP(6)"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-size>true</allows-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP(6)</name>
         <comment>this is what comes back for "TIMESTAMP"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP(6) WITH LOCAL TIME ZONE</name>
         <comment>this is what comes back for "TIMESTAMP WITH LOCAL TIME ZONE"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP(6) WITH TIME ZONE</name>
         <comment>this is what comes back for "TIMESTAMP WITH TIME ZONE"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP WITH LOCAL TIME ZONE</name>
         <comment>this is a write-only type - it will come back as "TIMESTAMP(6) WITH LOCAL TIME ZONE"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>TIMESTAMP WITH TIME ZONE</name>
         <comment>this is a write-only type - it will come back as "TIMESTAMP(6) WITH TIME ZONE"</comment>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>UROWID</name>
         <jdbc-type>DECIMAL</jdbc-type>
         <allows-size>true</allows-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>VARCHAR2</name>
         <jdbc-type>VARCHAR</jdbc-type>
         <allows-size>true</allows-size>
         <requires-size>true</requires-size>
         <initial-size>20</initial-size>
         <allows-null>true</allows-null>
      </database-type>
      <database-type>
         <name>XMLTYPE</name>
         <jdbc-type>CLOB</jdbc-type>
         <allows-null>true</allows-null>
      </database-type>
   </database-types>
   <jdbc-mappings>
      <jdbc-mapping>
         <jdbc-type>ARRAY</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>BIGINT</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>BINARY</jdbc-type>
         <database-type>RAW</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>BIT</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>BLOB</jdbc-type>
         <database-type>BLOB</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>BOOLEAN</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>CHAR</jdbc-type>
         <database-type>CHAR</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>CLOB</jdbc-type>
         <database-type>CLOB</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>DATALINK</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>DATE</jdbc-type>
         <database-type>DATE</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>DECIMAL</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>DISTINCT</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>DOUBLE</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>FLOAT</jdbc-type>
         <database-type>FLOAT</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>INTEGER</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>JAVA_OBJECT</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>LONGNVARCHAR</jdbc-type>
         <database-type>LONG</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>LONGVARBINARY</jdbc-type>
         <database-type>LONG RAW</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>LONGVARCHAR</jdbc-type>
         <database-type>LONG</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>NCHAR</jdbc-type>
         <database-type>CHAR</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>NCLOB</jdbc-type>
         <database-type>CLOB</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>NUMERIC</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>NVARCHAR</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>OTHER</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>REAL</jdbc-type>
         <database-type>REAL</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>REF</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>ROWID</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>SMALLINT</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>SQLXML</jdbc-type>
         <database-type>LONG</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>STRUCT</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>TIME</jdbc-type>
         <database-type>DATE</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>TIMESTAMP</jdbc-type>
         <database-type>DATE</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>TINYINT</jdbc-type>
         <database-type>NUMBER</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>VARBINARY</jdbc-type>
         <database-type>RAW</database-type>
      </jdbc-mapping>
      <jdbc-mapping>
         <jdbc-type>VARCHAR</jdbc-type>
         <database-type>VARCHAR2</database-type>
      </jdbc-mapping>
   </jdbc-mappings>
</database-platform>
