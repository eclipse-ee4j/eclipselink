<?xml version = '1.0' encoding = 'UTF-8'?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0,
    or the Eclipse Distribution License v. 1.0 which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

-->

<platforms>
   <name>Oracle TopLink Workbench Database Platform Repository</name>
   <default-platform>Oracle</default-platform>
   <jdbc-type-repository>
      <default-jdbc-type>VARCHAR</default-jdbc-type>
      <jdbc-types>
         <jdbc-type>
            <name>ARRAY</name>
            <code>2003</code>
         </jdbc-type>
         <jdbc-type>
            <name>BIGINT</name>
            <code>-5</code>
         </jdbc-type>
         <jdbc-type>
            <name>BINARY</name>
            <code>-2</code>
         </jdbc-type>
         <jdbc-type>
            <name>BIT</name>
            <code>-7</code>
         </jdbc-type>
         <jdbc-type>
            <name>BLOB</name>
            <code>2004</code>
         </jdbc-type>
         <jdbc-type>
            <name>BOOLEAN</name>
            <code>16</code>
         </jdbc-type>
         <jdbc-type>
            <name>CHAR</name>
            <code>1</code>
         </jdbc-type>
         <jdbc-type>
            <name>CLOB</name>
            <code>2005</code>
         </jdbc-type>
         <jdbc-type>
            <name>DATALINK</name>
            <code>70</code>
         </jdbc-type>
         <jdbc-type>
            <name>DATE</name>
            <code>91</code>
         </jdbc-type>
         <jdbc-type>
            <name>DECIMAL</name>
            <code>3</code>
         </jdbc-type>
         <jdbc-type>
            <name>DISTINCT</name>
            <code>2001</code>
         </jdbc-type>
         <jdbc-type>
            <name>DOUBLE</name>
            <code>8</code>
         </jdbc-type>
         <jdbc-type>
            <name>FLOAT</name>
            <code>6</code>
         </jdbc-type>
         <jdbc-type>
            <name>INTEGER</name>
            <code>4</code>
         </jdbc-type>
         <jdbc-type>
            <name>JAVA_OBJECT</name>
            <code>2000</code>
         </jdbc-type>
         <jdbc-type>
            <name>LONGNVARCHAR</name>
            <code>-16</code>
         </jdbc-type>
         <jdbc-type>
            <name>LONGVARBINARY</name>
            <code>-4</code>
         </jdbc-type>
         <jdbc-type>
            <name>LONGVARCHAR</name>
            <code>-1</code>
         </jdbc-type>
         <jdbc-type>
            <name>NCHAR</name>
            <code>-15</code>
         </jdbc-type>
         <jdbc-type>
            <name>NCLOB</name>
            <code>2011</code>
         </jdbc-type>
         <jdbc-type>
            <name>NUMERIC</name>
            <code>2</code>
         </jdbc-type>
         <jdbc-type>
            <name>NVARCHAR</name>
            <code>-9</code>
         </jdbc-type>
         <jdbc-type>
            <name>OTHER</name>
            <code>1111</code>
         </jdbc-type>
         <jdbc-type>
            <name>REAL</name>
            <code>7</code>
         </jdbc-type>
         <jdbc-type>
            <name>REF</name>
            <code>2006</code>
         </jdbc-type>
         <jdbc-type>
            <name>ROWID</name>
            <code>-8</code>
         </jdbc-type>
         <jdbc-type>
            <name>SMALLINT</name>
            <code>5</code>
         </jdbc-type>
         <jdbc-type>
            <name>SQLXML</name>
            <code>2009</code>
         </jdbc-type>
         <jdbc-type>
            <name>STRUCT</name>
            <code>2002</code>
         </jdbc-type>
         <jdbc-type>
            <name>TIME</name>
            <code>92</code>
         </jdbc-type>
         <jdbc-type>
            <name>TIMESTAMP</name>
            <code>93</code>
         </jdbc-type>
         <jdbc-type>
            <name>TINYINT</name>
            <code>-6</code>
         </jdbc-type>
         <jdbc-type>
            <name>VARBINARY</name>
            <code>-3</code>
         </jdbc-type>
         <jdbc-type>
            <name>VARCHAR</name>
            <code>12</code>
         </jdbc-type>
      </jdbc-types>
      <jdbc-type-to-java-type-declaration-mappings>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>ARRAY</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.sql.Array</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>BIGINT</jdbc-type>
            <java-type-declaration>
               <java-class-name>long</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>BINARY</jdbc-type>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>BIT</jdbc-type>
            <java-type-declaration>
               <java-class-name>boolean</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>BLOB</jdbc-type>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
            <comment>different from the JDBC spec mapping</comment>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>BOOLEAN</jdbc-type>
            <java-type-declaration>
               <java-class-name>boolean</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>CHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>CLOB</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
            <comment>different from the JDBC spec mapping</comment>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>DATALINK</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.net.URL</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>DATE</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.util.Calendar</java-class-name>
            </java-type-declaration>
            <comment>different from the JDBC spec mapping</comment>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>DECIMAL</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.math.BigDecimal</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>DISTINCT</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.Object</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>DOUBLE</jdbc-type>
            <java-type-declaration>
               <java-class-name>double</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>FLOAT</jdbc-type>
            <java-type-declaration>
               <java-class-name>double</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>INTEGER</jdbc-type>
            <java-type-declaration>
               <java-class-name>int</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>JAVA_OBJECT</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.Object</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>LONGNVARCHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>LONGVARBINARY</jdbc-type>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>LONGVARCHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>NCHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>NCLOB</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>NUMERIC</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.math.BigDecimal</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>NVARCHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>OTHER</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.Object</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>REAL</jdbc-type>
            <java-type-declaration>
               <java-class-name>float</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>REF</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.sql.Ref</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>ROWID</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.math.BigDecimal</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>SMALLINT</jdbc-type>
            <java-type-declaration>
               <java-class-name>short</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>SQLXML</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>STRUCT</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.sql.Struct</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>TIME</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.util.Calendar</java-class-name>
            </java-type-declaration>
            <comment>different from the JDBC spec mapping</comment>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>TIMESTAMP</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.util.Calendar</java-class-name>
            </java-type-declaration>
            <comment>different from the JDBC spec mapping</comment>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>TINYINT</jdbc-type>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>VARBINARY</jdbc-type>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
         <jdbc-type-to-java-type-declaration-mapping>
            <jdbc-type>VARCHAR</jdbc-type>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
         </jdbc-type-to-java-type-declaration-mapping>
      </jdbc-type-to-java-type-declaration-mappings>
      <java-type-declaration-to-jdbc-type-mappings>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>boolean</java-class-name>
            </java-type-declaration>
            <jdbc-type>BOOLEAN</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
            </java-type-declaration>
            <jdbc-type>TINYINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>byte</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
            <jdbc-type>VARBINARY</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>char</java-class-name>
            </java-type-declaration>
            <jdbc-type>CHAR</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>char</java-class-name>
               <array-depth>1</array-depth>
            </java-type-declaration>
            <jdbc-type>VARCHAR</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>double</java-class-name>
            </java-type-declaration>
            <jdbc-type>DOUBLE</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>float</java-class-name>
            </java-type-declaration>
            <jdbc-type>REAL</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>int</java-class-name>
            </java-type-declaration>
            <jdbc-type>INTEGER</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Boolean</java-class-name>
            </java-type-declaration>
            <jdbc-type>BOOLEAN</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Byte</java-class-name>
            </java-type-declaration>
            <jdbc-type>TINYINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Character</java-class-name>
            </java-type-declaration>
            <jdbc-type>CHAR</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Class</java-class-name>
            </java-type-declaration>
            <jdbc-type>VARCHAR</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Double</java-class-name>
            </java-type-declaration>
            <jdbc-type>DOUBLE</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Float</java-class-name>
            </java-type-declaration>
            <jdbc-type>REAL</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Integer</java-class-name>
            </java-type-declaration>
            <jdbc-type>INTEGER</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Long</java-class-name>
            </java-type-declaration>
            <jdbc-type>BIGINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Number</java-class-name>
            </java-type-declaration>
            <jdbc-type>NUMERIC</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.Short</java-class-name>
            </java-type-declaration>
            <jdbc-type>SMALLINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.lang.String</java-class-name>
            </java-type-declaration>
            <jdbc-type>VARCHAR</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.math.BigDecimal</java-class-name>
            </java-type-declaration>
            <jdbc-type>NUMERIC</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.math.BigInteger</java-class-name>
            </java-type-declaration>
            <jdbc-type>NUMERIC</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.net.URL</java-class-name>
            </java-type-declaration>
            <jdbc-type>DATALINK</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Array</java-class-name>
            </java-type-declaration>
            <jdbc-type>ARRAY</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Blob</java-class-name>
            </java-type-declaration>
            <jdbc-type>BLOB</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Clob</java-class-name>
            </java-type-declaration>
            <jdbc-type>CLOB</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Date</java-class-name>
            </java-type-declaration>
            <jdbc-type>DATE</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.NClob</java-class-name>
            </java-type-declaration>
            <jdbc-type>NCLOB</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Ref</java-class-name>
            </java-type-declaration>
            <jdbc-type>REF</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.RowId</java-class-name>
            </java-type-declaration>
            <jdbc-type>ROWID</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.SQLXML</java-class-name>
            </java-type-declaration>
            <jdbc-type>SQLXML</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Struct</java-class-name>
            </java-type-declaration>
            <jdbc-type>STRUCT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Time</java-class-name>
            </java-type-declaration>
            <jdbc-type>TIME</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.sql.Timestamp</java-class-name>
            </java-type-declaration>
            <jdbc-type>TIMESTAMP</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.util.Calendar</java-class-name>
            </java-type-declaration>
            <jdbc-type>TIMESTAMP</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>java.util.Date</java-class-name>
            </java-type-declaration>
            <jdbc-type>DATE</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>long</java-class-name>
            </java-type-declaration>
            <jdbc-type>BIGINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
         <java-type-declaration-to-jdbc-type-mapping>
            <java-type-declaration>
               <java-class-name>short</java-class-name>
            </java-type-declaration>
            <jdbc-type>SMALLINT</jdbc-type>
         </java-type-declaration-to-jdbc-type-mapping>
      </java-type-declaration-to-jdbc-type-mappings>
   </jdbc-type-repository>
</platforms>
